{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1918648\\\\Documents\\\\GitHub\\\\COD-reactjs\\\\src\\\\pages\\\\pagina_de_teste\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n// import { Barrinha } from \"../../components/sidebar\";\nimport api from \"../../services/api\";\nimport styled from \"@emotion/styled\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport SidebarDashboard from \"../../components/sidebar\";\nimport barrinhaService from \"../../services/barrinhaState\";\nimport clsx from \"clsx\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(24),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Pagina_de_Teste() {\n  _s();\n\n  // MEU RETORNO DEVE SER UMA LISTA DE OBJETOS\n  // const [state, setState] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [laboraty_name, setLaborary_name] = useState(\"\");\n  const classes = useStyles(); // O userState guarda váriaveis dinamicamente\n\n  const [nome, setNome] = useState(\"\"); // variavel auxiliar que funciona como histório de navegação\n\n  const history = useHistory();\n  const [selectedId, setSelectedId] = useState(null);\n  const dados = {\n    token: \"269add21e1b01a62f8854b6e2a0e38\",\n    username: \"test10000\",\n    project: \"8bf8529d9c144b04b6a9d9fb87bcd7f7\"\n  };\n  const [collapsed, setCollapsed] = useState(true);\n  useEffect(() => {\n    const subscribe = barrinhaService.onBarrinha().subscribe(state => {\n      if (state) {\n        setCollapsed(false);\n      } else {\n        setCollapsed(true);\n      }\n    });\n  });\n  const [projetos, listProjeto] = useState([]);\n  useEffect(() => {\n    console.log(\"API PARA LISTAR OS PROJETOS\");\n    api.get(`/listarprojetos/`).then(projetos => listProjeto(projetos.data));\n  }, []);\n  const [virtualDesktops, listVirtualDesktops] = useState([]);\n\n  const handleLaboratoryChange = event => {\n    const selectedIndex = event.target.selectedIndex;\n    const lab_name = event.target[selectedIndex].getAttribute('value');\n    const lab_id = event.target[selectedIndex].getAttribute('id');\n    api.get(`/vdi/${lab_id}/${lab_name}`).then(virtualDesktops => listVirtualDesktops(virtualDesktops.data));\n  };\n\n  const [dadosEnviar, setDadosEnviar] = useState({\n    username: '',\n    email: '',\n    city: '',\n    phone: ''\n  });\n\n  const onClickButtonVDI = url => {\n    history.push({\n      pathname: '/vdi/',\n      dadosEnviar\n    });\n    console.log(\"Botão clicado!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Laborat\\xF3rios dispon\\xEDveis!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleLaboratoryChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Selecionar --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), projetos.map(proj => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: proj['id'],\n              value: proj['nome'],\n              children: proj['nome']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: virtualDesktops.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            hidden: true,\n            className: clsx(classes.root),\n            onClick: () => onClickButtonVDI('James'),\n            children: \"Laborat\\xF3rios dispon\\xEDveis!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: virtualDesktops.map((d, idx) => /*#__PURE__*/_jsxDEV(Bloco // pra mostrar item por item preciso da key\n            , {\n              whileHover: {\n                backgroundColor: \"rgb(1, 87, 61)\"\n              },\n              initial: {\n                marginLeft: 200\n              },\n              animate: {\n                marginLeft: collapsed ? 64 : 168\n              },\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: {\n                  pathname: '/vdi',\n                  state: [d[\"url\"]]\n                },\n                children: [\" \", d[\"nome\"], \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)\n            }, d[\"id\"], false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Pagina_de_Teste, \"cEzu0FZdvfdEzDU21uKmIHmLcPo=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Pagina_de_Teste;\nconst Container = styled.div`\n  display: flex;\n  justifycontent: center;\n  flex-direction: column;\n  align-items: center;\n`;\n_c2 = Container;\nconst Bloco = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justifycontent: center;\n  align-items: center;\n  background-color: #01573d;\n  padding: 20px; /* this */\n  margin: 20px;\n  transition: 1s background-color;\n  // flex-grow: 1;\n  width: 40%;\n  // height: 20%;\n  color: white;\n`;\n_c3 = Bloco;\nexport default Pagina_de_Teste;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Pagina_de_Teste\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Bloco\");","map":{"version":3,"sources":["C:/Users/1918648/Documents/GitHub/COD-reactjs/src/pages/pagina_de_teste/index.tsx"],"names":["Button","makeStyles","createStyles","useEffect","useState","useHistory","api","styled","AnimatePresence","motion","SidebarDashboard","barrinhaService","clsx","NavLink","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Pagina_de_Teste","token","setToken","username","setUsername","laboraty_name","setLaborary_name","classes","nome","setNome","history","selectedId","setSelectedId","dados","project","collapsed","setCollapsed","subscribe","onBarrinha","state","projetos","listProjeto","console","log","get","then","data","virtualDesktops","listVirtualDesktops","handleLaboratoryChange","event","selectedIndex","target","lab_name","getAttribute","lab_id","dadosEnviar","setDadosEnviar","email","city","phone","onClickButtonVDI","url","push","pathname","map","proj","length","d","idx","backgroundColor","marginLeft","Container","div","Bloco"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AAEA,SAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,eAAT,EAA+CC,MAA/C,QAA6D,eAA7D;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,IACzBb,YAAY,CAAC;AACTc,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GADG;AAITC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,EAAd,CADN;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHvB;AAJE,CAAD,CADY,CAA5B;;AAaA,SAASC,eAAT,GAA2B;AAAA;;AACvB;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC2B,aAAD,EAAgBC,gBAAhB,IAAoC5B,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM6B,OAAO,GAAGnB,SAAS,EAAzB,CAPuB,CAQvB;;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,EAAD,CAAhC,CATuB,CAUvB;;AACA,QAAMgC,OAAO,GAAG/B,UAAU,EAA1B;AACA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMmC,KAAK,GAAG;AACVZ,IAAAA,KAAK,EAAE,gCADG;AAEVE,IAAAA,QAAQ,EAAE,WAFA;AAGVW,IAAAA,OAAO,EAAE;AAHC,GAAd;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwC,SAAS,GAAGhC,eAAe,CAACiC,UAAhB,GAA6BD,SAA7B,CAAwCE,KAAD,IAAW;AAChE,UAAIA,KAAJ,EAAW;AACPH,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAFD,MAEO;AACHA,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,KANiB,CAAlB;AAOH,GARQ,CAAT;AAUA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ6C,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA3C,IAAAA,GAAG,CAAC4C,GAAJ,CAAS,kBAAT,EAA4BC,IAA5B,CAAkCL,QAAD,IAAcC,WAAW,CAACD,QAAQ,CAACM,IAAV,CAA1D;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM,CAACC,eAAD,EAAkBC,mBAAlB,IAAyClD,QAAQ,CAAC,EAAD,CAAvD;;AAEA,QAAMmD,sBAAsB,GAAIC,KAAD,IAAiD;AAC5E,UAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaD,aAAnC;AACA,UAAME,QAAQ,GAAGH,KAAK,CAACE,MAAN,CAAaD,aAAb,EAA4BG,YAA5B,CAAyC,OAAzC,CAAjB;AACA,UAAMC,MAAM,GAAGL,KAAK,CAACE,MAAN,CAAaD,aAAb,EAA4BG,YAA5B,CAAyC,IAAzC,CAAf;AACAtD,IAAAA,GAAG,CAAC4C,GAAJ,CAAS,QAAOW,MAAO,IAAGF,QAAS,EAAnC,EAAsCR,IAAtC,CAA4CE,eAAD,IAAqBC,mBAAmB,CAACD,eAAe,CAACD,IAAjB,CAAnF;AACH,GALD;;AAOA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgC3D,QAAQ,CAAC;AAC3CyB,IAAAA,QAAQ,EAAE,EADiC;AAE3CmC,IAAAA,KAAK,EAAE,EAFoC;AAG3CC,IAAAA,IAAI,EAAE,EAHqC;AAI3CC,IAAAA,KAAK,EAAE;AAJoC,GAAD,CAA9C;;AAOA,QAAMC,gBAAgB,GAAIC,GAAD,IAAgB;AACrChC,IAAAA,OAAO,CAACiC,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETR,MAAAA;AAFS,KAAb;AAIAd,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAND;;AAQA,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eACsC;AAAA;AAAA;AAAA;AAAA,gBADtC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI,QAAC,eAAD;AAAA,iCACI;AACI,YAAA,QAAQ,EAAEM,sBADd;AAAA,oCAGI;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAIKT,QAAQ,CAACyB,GAAT,CAAcC,IAAD,iBACV;AAAQ,cAAA,EAAE,EAAGA,IAAI,CAAC,IAAD,CAAjB;AAA0B,cAAA,KAAK,EAAGA,IAAI,CAAC,MAAD,CAAtC;AAAA,wBACKA,IAAI,CAAC,MAAD;AADT;AAAA;AAAA;AAAA;AAAA,oBADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI,QAAC,eAAD;AAAA,oBACKnB,eAAe,CAACoB,MAAhB,GAAyB,CAAzB,iBACG,QAAC,MAAD;AACI,YAAA,MAAM,MADV;AAEI,YAAA,SAAS,EAAE7D,IAAI,CAACqB,OAAO,CAACjB,IAAT,CAFnB;AAGI,YAAA,OAAO,EAAE,MAAMmD,gBAAgB,CAAC,OAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAwBI,QAAC,eAAD;AAAA,iCACI;AAAA,sBACKd,eAAe,CAACkB,GAAhB,CAAoB,CAACG,CAAD,EAAIC,GAAJ,kBACjB,QAAC,KAAD,CACI;AADJ;AAGI,cAAA,UAAU,EAAE;AAAEC,gBAAAA,eAAe,EAAE;AAAnB,eAHhB;AAII,cAAA,OAAO,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAJb;AAKI,cAAA,OAAO,EAAE;AAAEA,gBAAAA,UAAU,EAAEpC,SAAS,GAAG,EAAH,GAAQ;AAA/B,eALb;AAAA,qCAOI,QAAC,OAAD;AAAS,gBAAA,EAAE,EAAE;AACT6B,kBAAAA,QAAQ,EAAE,MADD;AAETzB,kBAAAA,KAAK,EAAE,CAAC6B,CAAC,CAAC,KAAD,CAAF;AAFE,iBAAb;AAAA,gCAGMA,CAAC,CAAC,MAAD,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ,eAESA,CAAC,CAAC,IAAD,CAFV;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAwDH;;GAtHQhD,e;UAOWZ,S,EAIAT,U;;;KAXXqB,e;AAwHT,MAAMoD,SAAS,GAAGvE,MAAM,CAACwE,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,S;AAON,MAAME,KAAK,GAAGzE,MAAM,CAACE,MAAM,CAACsE,GAAR,CAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMC,K;AAeN,eAAetD,eAAf","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { FormEvent, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Navbartop } from \"../../components/navbartop/navbartest\";\r\n// import { Barrinha } from \"../../components/sidebar\";\r\nimport api from \"../../services/api\";\r\nimport styled from \"@emotion/styled\";\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\r\nimport SidebarDashboard from \"../../components/sidebar\";\r\nimport barrinhaService from \"../../services/barrinhaState\";\r\nimport clsx from \"clsx\";\r\nimport { stringify } from \"querystring\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(24),\r\n            textAlign: \"center\",\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    })\r\n);\r\n\r\nfunction Pagina_de_Teste() {\r\n    // MEU RETORNO DEVE SER UMA LISTA DE OBJETOS\r\n    // const [state, setState] = useState([]);\r\n    const [token, setToken] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [laboraty_name, setLaborary_name] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n    // O userState guarda váriaveis dinamicamente\r\n    const [nome, setNome] = useState(\"\");\r\n    // variavel auxiliar que funciona como histório de navegação\r\n    const history = useHistory();\r\n    const [selectedId, setSelectedId] = useState(null);\r\n\r\n    const dados = {\r\n        token: \"269add21e1b01a62f8854b6e2a0e38\",\r\n        username: \"test10000\",\r\n        project: \"8bf8529d9c144b04b6a9d9fb87bcd7f7\",\r\n\r\n    };\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const subscribe = barrinhaService.onBarrinha().subscribe((state) => {\r\n            if (state) {\r\n                setCollapsed(false);\r\n            } else {\r\n                setCollapsed(true);\r\n            }\r\n        });\r\n    });\r\n\r\n    const [projetos, listProjeto] = useState([]);\r\n    useEffect(() => {\r\n        console.log(\"API PARA LISTAR OS PROJETOS\")\r\n        api.get(`/listarprojetos/`).then((projetos) => listProjeto(projetos.data));\r\n    }, []);\r\n\r\n    const [virtualDesktops, listVirtualDesktops] = useState([]);\r\n\r\n    const handleLaboratoryChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const selectedIndex = event.target.selectedIndex;\r\n        const lab_name = event.target[selectedIndex].getAttribute('value')\r\n        const lab_id = event.target[selectedIndex].getAttribute('id')\r\n        api.get(`/vdi/${lab_id}/${lab_name}`).then((virtualDesktops) => listVirtualDesktops(virtualDesktops.data))\r\n    }\r\n\r\n    const [dadosEnviar, setDadosEnviar] = useState({\r\n        username: '',\r\n        email: '',\r\n        city: '',\r\n        phone: ''\r\n      });\r\n    \r\n    const onClickButtonVDI = (url:String) => {\r\n        history.push({\r\n            pathname: '/vdi/',\r\n            dadosEnviar\r\n        });\r\n        console.log(\"Botão clicado!\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SidebarDashboard />\r\n            <Container>\r\n                <div>\r\n                    <h1>Laboratórios disponíveis!</h1><br></br>\r\n                    {/* <Button className={clsx(classes.root)}>Laboratórios disponíveis!</Button> */}\r\n                </div>\r\n                <div>\r\n                    <AnimatePresence>\r\n                        <select\r\n                            onChange={handleLaboratoryChange}\r\n                        >\r\n                            <option value=\"\">-- Selecionar --</option>\r\n                            {projetos.map((proj) => (\r\n                                <option id={(proj['id'])} value={(proj['nome'])}>\r\n                                    {proj['nome']}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </AnimatePresence>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <AnimatePresence>\r\n                        {virtualDesktops.length > 0 &&\r\n                            <Button \r\n                                hidden \r\n                                className={clsx(classes.root)} \r\n                                onClick={() => onClickButtonVDI('James')}\r\n                            >Laboratórios disponíveis!</Button>\r\n                        }\r\n                    </AnimatePresence>\r\n                    <AnimatePresence>\r\n                        <div>\r\n                            {virtualDesktops.map((d, idx) => (\r\n                                <Bloco\r\n                                    // pra mostrar item por item preciso da key\r\n                                    key={d[\"id\"]}\r\n                                    whileHover={{ backgroundColor: \"rgb(1, 87, 61)\" }}\r\n                                    initial={{ marginLeft: 200 }}\r\n                                    animate={{ marginLeft: collapsed ? 64 : 168 }}\r\n                                >\r\n                                    <NavLink to={{\r\n                                        pathname: '/vdi',\r\n                                        state: [d[\"url\"]]\r\n                                    }} > {d[\"nome\"]} </NavLink>\r\n\r\n                                    {/* <a href={\"/vdi?url=\" + d[\"url\"]} target=\"_blank\">{d[\"nome\"]}</a> */}\r\n                                </Bloco>\r\n                            ))}\r\n                        </div>\r\n                    </AnimatePresence>\r\n                </div>\r\n            </Container >\r\n        </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justifycontent: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Bloco = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justifycontent: center;\r\n  align-items: center;\r\n  background-color: #01573d;\r\n  padding: 20px; /* this */\r\n  margin: 20px;\r\n  transition: 1s background-color;\r\n  // flex-grow: 1;\r\n  width: 40%;\r\n  // height: 20%;\r\n  color: white;\r\n`;\r\n\r\nexport default Pagina_de_Teste;"]},"metadata":{},"sourceType":"module"}