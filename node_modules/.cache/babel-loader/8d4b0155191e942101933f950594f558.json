{"ast":null,"code":"import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n  timeoutProvider.setTimeout(function () {\n    var onUnhandledError = config.onUnhandledError;\n\n    if (onUnhandledError) {\n      onUnhandledError(err);\n    } else {\n      throw err;\n    }\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/util/reportUnhandledError.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,eAAT,QAAgC,8BAAhC;AAWA,OAAM,SAAU,oBAAV,CAA+B,GAA/B,EAAuC;AAC3C,EAAA,eAAe,CAAC,UAAhB,CAA2B,YAAA;AACjB,QAAA,gBAAgB,GAAK,MAAM,CAAX,gBAAhB;;AACR,QAAI,gBAAJ,EAAsB;AAEpB,MAAA,gBAAgB,CAAC,GAAD,CAAhB;AACD,KAHD,MAGO;AAEL,YAAM,GAAN;AACD;AACF,GATD;AAUD","sourceRoot":"","sourcesContent":["import { config } from '../config';\r\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\r\nexport function reportUnhandledError(err) {\r\n    timeoutProvider.setTimeout(function () {\r\n        var onUnhandledError = config.onUnhandledError;\r\n        if (onUnhandledError) {\r\n            onUnhandledError(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=reportUnhandledError.js.map"]},"metadata":{},"sourceType":"module"}