{"ast":null,"code":"import { Observable } from '../Observable';\nimport { EMPTY } from './empty';\nexport function range(start, count, scheduler) {\n  if (count == null) {\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    return EMPTY;\n  }\n\n  var end = count + start;\n  return new Observable(scheduler ? function (subscriber) {\n    var n = start;\n    return scheduler.schedule(function () {\n      if (n < end) {\n        subscriber.next(n++);\n        this.schedule();\n      } else {\n        subscriber.complete();\n      }\n    });\n  } : function (subscriber) {\n    var n = start;\n\n    while (n < end && !subscriber.closed) {\n      subscriber.next(n++);\n    }\n\n    subscriber.complete();\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/observable/range.ts"],"names":[],"mappings":"AACA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,KAAT,QAAsB,SAAtB;AAqDA,OAAM,SAAU,KAAV,CAAgB,KAAhB,EAA+B,KAA/B,EAA+C,SAA/C,EAAwE;AAC5E,MAAI,KAAK,IAAI,IAAb,EAAmB;AAEjB,IAAA,KAAK,GAAG,KAAR;AACA,IAAA,KAAK,GAAG,CAAR;AACD;;AAED,MAAI,KAAK,IAAI,CAAb,EAAgB;AAEd,WAAO,KAAP;AACD;;AAGD,MAAM,GAAG,GAAG,KAAK,GAAG,KAApB;AAEA,SAAO,IAAI,UAAJ,CACL,SAAS,GAEL,UAAC,UAAD,EAAW;AACT,QAAI,CAAC,GAAG,KAAR;AACA,WAAO,SAAS,CAAC,QAAV,CAAmB,YAAA;AACxB,UAAI,CAAC,GAAG,GAAR,EAAa;AACX,QAAA,UAAU,CAAC,IAAX,CAAgB,CAAC,EAAjB;AACA,aAAK,QAAL;AACD,OAHD,MAGO;AACL,QAAA,UAAU,CAAC,QAAX;AACD;AACF,KAPM,CAAP;AAQD,GAZI,GAcL,UAAC,UAAD,EAAW;AACT,QAAI,CAAC,GAAG,KAAR;;AACA,WAAO,CAAC,GAAG,GAAJ,IAAW,CAAC,UAAU,CAAC,MAA9B,EAAsC;AACpC,MAAA,UAAU,CAAC,IAAX,CAAgB,CAAC,EAAjB;AACD;;AACD,IAAA,UAAU,CAAC,QAAX;AACD,GArBA,CAAP;AAuBD","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\r\nimport { EMPTY } from './empty';\r\nexport function range(start, count, scheduler) {\r\n    if (count == null) {\r\n        count = start;\r\n        start = 0;\r\n    }\r\n    if (count <= 0) {\r\n        return EMPTY;\r\n    }\r\n    var end = count + start;\r\n    return new Observable(scheduler\r\n        ?\r\n            function (subscriber) {\r\n                var n = start;\r\n                return scheduler.schedule(function () {\r\n                    if (n < end) {\r\n                        subscriber.next(n++);\r\n                        this.schedule();\r\n                    }\r\n                    else {\r\n                        subscriber.complete();\r\n                    }\r\n                });\r\n            }\r\n        :\r\n            function (subscriber) {\r\n                var n = start;\r\n                while (n < end && !subscriber.closed) {\r\n                    subscriber.next(n++);\r\n                }\r\n                subscriber.complete();\r\n            });\r\n}\r\n//# sourceMappingURL=range.js.map"]},"metadata":{},"sourceType":"module"}