{"ast":null,"code":"import { __extends, __values } from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\n\nvar Subject = function (_super) {\n  __extends(Subject, _super);\n\n  function Subject() {\n    var _this = _super.call(this) || this;\n\n    _this.closed = false;\n    _this.observers = [];\n    _this.isStopped = false;\n    _this.hasError = false;\n    _this.thrownError = null;\n    return _this;\n  }\n\n  Subject.prototype.lift = function (operator) {\n    var subject = new AnonymousSubject(this, this);\n    subject.operator = operator;\n    return subject;\n  };\n\n  Subject.prototype._throwIfClosed = function () {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  };\n\n  Subject.prototype.next = function (value) {\n    var e_1, _a;\n\n    this._throwIfClosed();\n\n    if (!this.isStopped) {\n      var copy = this.observers.slice();\n\n      try {\n        for (var copy_1 = __values(copy), copy_1_1 = copy_1.next(); !copy_1_1.done; copy_1_1 = copy_1.next()) {\n          var observer = copy_1_1.value;\n          observer.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (copy_1_1 && !copy_1_1.done && (_a = copy_1.return)) _a.call(copy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n\n  Subject.prototype.error = function (err) {\n    this._throwIfClosed();\n\n    if (!this.isStopped) {\n      this.hasError = this.isStopped = true;\n      this.thrownError = err;\n      var observers = this.observers;\n\n      while (observers.length) {\n        observers.shift().error(err);\n      }\n    }\n  };\n\n  Subject.prototype.complete = function () {\n    this._throwIfClosed();\n\n    if (!this.isStopped) {\n      this.isStopped = true;\n      var observers = this.observers;\n\n      while (observers.length) {\n        observers.shift().complete();\n      }\n    }\n  };\n\n  Subject.prototype.unsubscribe = function () {\n    this.isStopped = this.closed = true;\n    this.observers = null;\n  };\n\n  Object.defineProperty(Subject.prototype, \"observed\", {\n    get: function () {\n      var _a;\n\n      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Subject.prototype._trySubscribe = function (subscriber) {\n    this._throwIfClosed();\n\n    return _super.prototype._trySubscribe.call(this, subscriber);\n  };\n\n  Subject.prototype._subscribe = function (subscriber) {\n    this._throwIfClosed();\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return this._innerSubscribe(subscriber);\n  };\n\n  Subject.prototype._innerSubscribe = function (subscriber) {\n    var _a = this,\n        hasError = _a.hasError,\n        isStopped = _a.isStopped,\n        observers = _a.observers;\n\n    return hasError || isStopped ? EMPTY_SUBSCRIPTION : (observers.push(subscriber), new Subscription(function () {\n      return arrRemove(observers, subscriber);\n    }));\n  };\n\n  Subject.prototype._checkFinalizedStatuses = function (subscriber) {\n    var _a = this,\n        hasError = _a.hasError,\n        thrownError = _a.thrownError,\n        isStopped = _a.isStopped;\n\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  };\n\n  Subject.prototype.asObservable = function () {\n    var observable = new Observable();\n    observable.source = this;\n    return observable;\n  };\n\n  Subject.create = function (destination, source) {\n    return new AnonymousSubject(destination, source);\n  };\n\n  return Subject;\n}(Observable);\n\nexport { Subject };\n\nvar AnonymousSubject = function (_super) {\n  __extends(AnonymousSubject, _super);\n\n  function AnonymousSubject(destination, source) {\n    var _this = _super.call(this) || this;\n\n    _this.destination = destination;\n    _this.source = source;\n    return _this;\n  }\n\n  AnonymousSubject.prototype.next = function (value) {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n  };\n\n  AnonymousSubject.prototype.error = function (err) {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n  };\n\n  AnonymousSubject.prototype.complete = function () {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n  };\n\n  AnonymousSubject.prototype._subscribe = function (subscriber) {\n    var _a, _b;\n\n    return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n  };\n\n  return AnonymousSubject;\n}(Subject);\n\nexport { AnonymousSubject };","map":{"version":3,"sources":["../../../src/internal/Subject.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends, __values } from \"tslib\";\r\nimport { Observable } from './Observable';\r\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\r\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\r\nimport { arrRemove } from './util/arrRemove';\r\nvar Subject = (function (_super) {\r\n    __extends(Subject, _super);\r\n    function Subject() {\r\n        var _this = _super.call(this) || this;\r\n        _this.closed = false;\r\n        _this.observers = [];\r\n        _this.isStopped = false;\r\n        _this.hasError = false;\r\n        _this.thrownError = null;\r\n        return _this;\r\n    }\r\n    Subject.prototype.lift = function (operator) {\r\n        var subject = new AnonymousSubject(this, this);\r\n        subject.operator = operator;\r\n        return subject;\r\n    };\r\n    Subject.prototype._throwIfClosed = function () {\r\n        if (this.closed) {\r\n            throw new ObjectUnsubscribedError();\r\n        }\r\n    };\r\n    Subject.prototype.next = function (value) {\r\n        var e_1, _a;\r\n        this._throwIfClosed();\r\n        if (!this.isStopped) {\r\n            var copy = this.observers.slice();\r\n            try {\r\n                for (var copy_1 = __values(copy), copy_1_1 = copy_1.next(); !copy_1_1.done; copy_1_1 = copy_1.next()) {\r\n                    var observer = copy_1_1.value;\r\n                    observer.next(value);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (copy_1_1 && !copy_1_1.done && (_a = copy_1.return)) _a.call(copy_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        this._throwIfClosed();\r\n        if (!this.isStopped) {\r\n            this.hasError = this.isStopped = true;\r\n            this.thrownError = err;\r\n            var observers = this.observers;\r\n            while (observers.length) {\r\n                observers.shift().error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        this._throwIfClosed();\r\n        if (!this.isStopped) {\r\n            this.isStopped = true;\r\n            var observers = this.observers;\r\n            while (observers.length) {\r\n                observers.shift().complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.unsubscribe = function () {\r\n        this.isStopped = this.closed = true;\r\n        this.observers = null;\r\n    };\r\n    Object.defineProperty(Subject.prototype, \"observed\", {\r\n        get: function () {\r\n            var _a;\r\n            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Subject.prototype._trySubscribe = function (subscriber) {\r\n        this._throwIfClosed();\r\n        return _super.prototype._trySubscribe.call(this, subscriber);\r\n    };\r\n    Subject.prototype._subscribe = function (subscriber) {\r\n        this._throwIfClosed();\r\n        this._checkFinalizedStatuses(subscriber);\r\n        return this._innerSubscribe(subscriber);\r\n    };\r\n    Subject.prototype._innerSubscribe = function (subscriber) {\r\n        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\r\n        return hasError || isStopped\r\n            ? EMPTY_SUBSCRIPTION\r\n            : (observers.push(subscriber), new Subscription(function () { return arrRemove(observers, subscriber); }));\r\n    };\r\n    Subject.prototype._checkFinalizedStatuses = function (subscriber) {\r\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\r\n        if (hasError) {\r\n            subscriber.error(thrownError);\r\n        }\r\n        else if (isStopped) {\r\n            subscriber.complete();\r\n        }\r\n    };\r\n    Subject.prototype.asObservable = function () {\r\n        var observable = new Observable();\r\n        observable.source = this;\r\n        return observable;\r\n    };\r\n    Subject.create = function (destination, source) {\r\n        return new AnonymousSubject(destination, source);\r\n    };\r\n    return Subject;\r\n}(Observable));\r\nexport { Subject };\r\nvar AnonymousSubject = (function (_super) {\r\n    __extends(AnonymousSubject, _super);\r\n    function AnonymousSubject(destination, source) {\r\n        var _this = _super.call(this) || this;\r\n        _this.destination = destination;\r\n        _this.source = source;\r\n        return _this;\r\n    }\r\n    AnonymousSubject.prototype.next = function (value) {\r\n        var _a, _b;\r\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\r\n    };\r\n    AnonymousSubject.prototype.error = function (err) {\r\n        var _a, _b;\r\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\r\n    };\r\n    AnonymousSubject.prototype.complete = function () {\r\n        var _a, _b;\r\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n    };\r\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\r\n    };\r\n    return AnonymousSubject;\r\n}(Subject));\r\nexport { AnonymousSubject };\r\n//# sourceMappingURL=Subject.js.map"]},"metadata":{},"sourceType":"module"}