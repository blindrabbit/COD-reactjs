{"ast":null,"code":"import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\n\nvar Observable = function () {\n  function Observable(subscribe) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  Observable.prototype.lift = function (operator) {\n    var observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  };\n\n  Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n    var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      this._deprecatedSyncErrorSubscribe(subscriber);\n    } else {\n      var _a = this,\n          operator = _a.operator,\n          source = _a.source;\n\n      subscriber.add(operator ? operator.call(subscriber, source) : source ? this._subscribe(subscriber) : this._trySubscribe(subscriber));\n    }\n\n    return subscriber;\n  };\n\n  Observable.prototype._deprecatedSyncErrorSubscribe = function (subscriber) {\n    var localSubscriber = subscriber;\n    localSubscriber._syncErrorHack_isSubscribing = true;\n    var operator = this.operator;\n\n    if (operator) {\n      subscriber.add(operator.call(subscriber, this.source));\n    } else {\n      try {\n        subscriber.add(this._subscribe(subscriber));\n      } catch (err) {\n        localSubscriber.__syncError = err;\n      }\n    }\n\n    var dest = localSubscriber;\n\n    while (dest) {\n      if ('__syncError' in dest) {\n        try {\n          throw dest.__syncError;\n        } finally {\n          subscriber.unsubscribe();\n        }\n      }\n\n      dest = dest.destination;\n    }\n\n    localSubscriber._syncErrorHack_isSubscribing = false;\n  };\n\n  Observable.prototype._trySubscribe = function (sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.error(err);\n    }\n  };\n\n  Observable.prototype.forEach = function (next, promiseCtor) {\n    var _this = this;\n\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var subscription;\n      subscription = _this.subscribe(function (value) {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n        }\n      }, reject, resolve);\n    });\n  };\n\n  Observable.prototype._subscribe = function (subscriber) {\n    var _a;\n\n    return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n  };\n\n  Observable.prototype[Symbol_observable] = function () {\n    return this;\n  };\n\n  Observable.prototype.pipe = function () {\n    var operations = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operations[_i] = arguments[_i];\n    }\n\n    return operations.length ? pipeFromArray(operations)(this) : this;\n  };\n\n  Observable.prototype.toPromise = function (promiseCtor) {\n    var _this = this;\n\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var value;\n\n      _this.subscribe(function (x) {\n        return value = x;\n      }, function (err) {\n        return reject(err);\n      }, function () {\n        return resolve(value);\n      });\n    });\n  };\n\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n}();\n\nexport { Observable };\n\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\n\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber(value) {\n  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);\n}","map":{"version":3,"sources":["../../../src/internal/Observable.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { SafeSubscriber, Subscriber } from './Subscriber';\r\nimport { isSubscription } from './Subscription';\r\nimport { observable as Symbol_observable } from './symbol/observable';\r\nimport { pipeFromArray } from './util/pipe';\r\nimport { config } from './config';\r\nimport { isFunction } from './util/isFunction';\r\nvar Observable = (function () {\r\n    function Observable(subscribe) {\r\n        if (subscribe) {\r\n            this._subscribe = subscribe;\r\n        }\r\n    }\r\n    Observable.prototype.lift = function (operator) {\r\n        var observable = new Observable();\r\n        observable.source = this;\r\n        observable.operator = operator;\r\n        return observable;\r\n    };\r\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\r\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\r\n        if (config.useDeprecatedSynchronousErrorHandling) {\r\n            this._deprecatedSyncErrorSubscribe(subscriber);\r\n        }\r\n        else {\r\n            var _a = this, operator = _a.operator, source = _a.source;\r\n            subscriber.add(operator\r\n                ?\r\n                    operator.call(subscriber, source)\r\n                : source\r\n                    ?\r\n                        this._subscribe(subscriber)\r\n                    :\r\n                        this._trySubscribe(subscriber));\r\n        }\r\n        return subscriber;\r\n    };\r\n    Observable.prototype._deprecatedSyncErrorSubscribe = function (subscriber) {\r\n        var localSubscriber = subscriber;\r\n        localSubscriber._syncErrorHack_isSubscribing = true;\r\n        var operator = this.operator;\r\n        if (operator) {\r\n            subscriber.add(operator.call(subscriber, this.source));\r\n        }\r\n        else {\r\n            try {\r\n                subscriber.add(this._subscribe(subscriber));\r\n            }\r\n            catch (err) {\r\n                localSubscriber.__syncError = err;\r\n            }\r\n        }\r\n        var dest = localSubscriber;\r\n        while (dest) {\r\n            if ('__syncError' in dest) {\r\n                try {\r\n                    throw dest.__syncError;\r\n                }\r\n                finally {\r\n                    subscriber.unsubscribe();\r\n                }\r\n            }\r\n            dest = dest.destination;\r\n        }\r\n        localSubscriber._syncErrorHack_isSubscribing = false;\r\n    };\r\n    Observable.prototype._trySubscribe = function (sink) {\r\n        try {\r\n            return this._subscribe(sink);\r\n        }\r\n        catch (err) {\r\n            sink.error(err);\r\n        }\r\n    };\r\n    Observable.prototype.forEach = function (next, promiseCtor) {\r\n        var _this = this;\r\n        promiseCtor = getPromiseCtor(promiseCtor);\r\n        return new promiseCtor(function (resolve, reject) {\r\n            var subscription;\r\n            subscription = _this.subscribe(function (value) {\r\n                try {\r\n                    next(value);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                    subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\r\n                }\r\n            }, reject, resolve);\r\n        });\r\n    };\r\n    Observable.prototype._subscribe = function (subscriber) {\r\n        var _a;\r\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\r\n    };\r\n    Observable.prototype[Symbol_observable] = function () {\r\n        return this;\r\n    };\r\n    Observable.prototype.pipe = function () {\r\n        var operations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            operations[_i] = arguments[_i];\r\n        }\r\n        return operations.length ? pipeFromArray(operations)(this) : this;\r\n    };\r\n    Observable.prototype.toPromise = function (promiseCtor) {\r\n        var _this = this;\r\n        promiseCtor = getPromiseCtor(promiseCtor);\r\n        return new promiseCtor(function (resolve, reject) {\r\n            var value;\r\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\r\n        });\r\n    };\r\n    Observable.create = function (subscribe) {\r\n        return new Observable(subscribe);\r\n    };\r\n    return Observable;\r\n}());\r\nexport { Observable };\r\nfunction getPromiseCtor(promiseCtor) {\r\n    var _a;\r\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\r\n}\r\nfunction isObserver(value) {\r\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\r\n}\r\nfunction isSubscriber(value) {\r\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\r\n}\r\n//# sourceMappingURL=Observable.js.map"]},"metadata":{},"sourceType":"module"}