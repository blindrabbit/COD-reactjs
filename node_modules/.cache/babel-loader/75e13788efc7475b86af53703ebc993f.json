{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/COD-reactjs/src/pages/laboratorios/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Barrinha } from \"../../components/sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(24),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Projects() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useStyles();\n\n  function CadastroUser() {\n    _s();\n\n    // O userState guarda váriaveis dinamicamente\n    const [nome, setNome] = useState(\"\"); // variavel auxiliar que funciona como histório de navegação\n\n    const history = useHistory();\n    const classes = useStyles();\n\n    const enviar = async e => {\n      e.preventDefault(); // pegar a hora atual\n\n      const time = new Date();\n      const data = {\n        nome,\n        time\n      };\n      console.log(data); // POST QUANDO MINHA API ESTIVER ONLINE\n      // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n\n      const response = await api.post(\"/authentication/\", data) // depois que rodar o post, roda o then\n      // CASO SUCESSO\n      .then(() => {\n        alert(\"Cadastrado com sucesso\"); // como eu nao sei se ele acessou a pagina home, estou forçando\n        // ele ir pra home\n\n        history.push(\"/\");\n      }) // CASO ERRO\n      .catch(() => {\n        alert(\"Serviço já existente\");\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Barrinha, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  _s(CadastroUser, \"4HhSW7UxECqSldLh/VyhUO4TK+g=\", false, function () {\n    return [useHistory, useStyles];\n  });\n}\n\n_s2(Projects, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/sanches/projects/COD-reactjs/src/pages/laboratorios/index.tsx"],"names":["makeStyles","createStyles","useState","useHistory","Barrinha","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Projects","classes","CadastroUser","nome","setNome","history","enviar","e","preventDefault","time","Date","data","console","log","response","api","post","then","alert","push","catch"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AACA,SAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,IAC3BL,YAAY,CAAC;AACXM,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADK;AAIXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,EAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJI,CAAD,CADc,CAA5B;;AAaA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAClB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;;AACA,WAASc,YAAT,GAAwB;AAAA;;AACtB;AACA,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC,CAFsB,CAGtB;;AACA,UAAMoB,OAAO,GAAGnB,UAAU,EAA1B;AACA,UAAMe,OAAO,GAAGb,SAAS,EAAzB;;AACA,UAAMkB,MAAM,GAAG,MAAOC,CAAP,IAAwB;AACrCA,MAAAA,CAAC,CAACC,cAAF,GADqC,CAGrC;;AACA,YAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,YAAMC,IAAI,GAAG;AACXR,QAAAA,IADW;AAEXM,QAAAA;AAFW,OAAb;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EATqC,CAWrC;AACA;;AACA,YAAMG,QAAQ,GAAG,MAAMC,GAAG,CACvBC,IADoB,CACf,kBADe,EACKL,IADL,EAErB;AACA;AAHqB,OAIpBM,IAJoB,CAIf,MAAM;AACVC,QAAAA,KAAK,CAAC,wBAAD,CAAL,CADU,CAGV;AACA;;AACAb,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,OAVoB,EAWrB;AAXqB,OAYpBC,KAZoB,CAYd,MAAM;AACXF,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,OAdoB,CAAvB;AAeD,KA5BD;;AA8BA,wBACE;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAMD;;AA5CiB,KAEThB,YAFS;AAAA,YAMAhB,UANA,EAOAE,SAPA;AAAA;AA6CnB;;IA7CQY,Q;UACSZ,S;;;KADTY,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { FormEvent, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Barrinha } from \"../../components/sidebar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(24),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nfunction Projects() {\n  const classes = useStyles();\n  function CadastroUser() {\n    // O userState guarda váriaveis dinamicamente\n    const [nome, setNome] = useState(\"\");\n    // variavel auxiliar que funciona como histório de navegação\n    const history = useHistory();\n    const classes = useStyles();\n    const enviar = async (e: FormEvent) => {\n      e.preventDefault();\n\n      // pegar a hora atual\n      const time = new Date();\n      const data = {\n        nome,\n        time,\n      };\n      console.log(data);\n\n      // POST QUANDO MINHA API ESTIVER ONLINE\n      // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n      const response = await api\n        .post(\"/authentication/\", data)\n        // depois que rodar o post, roda o then\n        // CASO SUCESSO\n        .then(() => {\n          alert(\"Cadastrado com sucesso\");\n\n          // como eu nao sei se ele acessou a pagina home, estou forçando\n          // ele ir pra home\n          history.push(\"/\");\n        })\n        // CASO ERRO\n        .catch(() => {\n          alert(\"Serviço já existente\");\n        });\n    };\n\n    return (\n      <>\n        <Barrinha />\n        {/* <Footer /> */}\n      </>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}