{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/COD-reactjs/src/pages/laboratorios/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { CssBaseline } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Navbartop } from \"../../components/navbartop/navbartest\";\nimport api from \"../../services/api\";\nimport styled from \"@emotion/styled\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(24),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Projects() {\n  _s();\n\n  // MEU RETORNO DEVE SER UMA LISTA DE OBJETOS\n  const [state, setState] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [laboraty_name, setLaborary_name] = useState(\"\");\n  const classes = useStyles(); // O userState guarda váriaveis dinamicamente\n\n  const [nome, setNome] = useState(\"\"); // variavel auxiliar que funciona como histório de navegação\n\n  const history = useHistory(); // useEffect(() => {\n  //   api.get(\"/api/data\").then(\n  //     res => setState(res.data);\n  //   );\n  // });\n\n  const dados = {\n    token: \"269add21e1b01a62f8854b6e2a0e38\",\n    username: \"test10\"\n  };\n  useEffect(() => {\n    const config = {\n      headers: {\n        token: dados.token,\n        username: dados.username\n      }\n    }; // PARA ENVIAR PRA BUSCAR INFORMAÇÇÕES DE UM PROJETO\n    // ESPECIFICO: `/laboratory/${config}`\n\n    api.get(\"/laboratory/\", config).then(res => setState(res.data));\n  }, [dados.token, dados.username]); // const CardContainer = styled(motion.div)`\n  //   display: grid;\n  //   place-content: center;\n  //   padding: 8px;\n  //   background-color: white;\n  //   height: 50px;\n  //   width: 200px;\n  //   border-radius: 8px;\n  // `;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbartop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: state.map(d => /*#__PURE__*/_jsxDEV(CardContainer, {\n        layout: true // key={extractKey(d)}\n        // style={cardStyle?.(item, idx)}\n        // initial={{ opacity: 10 }}\n        ,\n        animate: {\n          opacity: 3,\n          scale: [1.2, 1],\n          rotate: [1, 0, 0],\n          transition: [0, 1, 0]\n        },\n        children: d\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Projects, \"7N4NOM4nF0eJ/0Ngxi7xLAbZkEE=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Projects;\nconst Grid = styled.div`\n  display: flex;\n`;\nconst CardContainer = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: green;\n  padding: 20px; /* this */\n  margin: 20px;\n`;\n_c2 = CardContainer;\nexport default Projects; // // {state.map((d)\n//       {/* // style={{\n//       //   display: \"flex\",\n//       //   alignItems: \"center\",\n//       //   justifyContent: \"center\",\n//       // }}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Projects\");\n$RefreshReg$(_c2, \"CardContainer\");","map":{"version":3,"sources":["/home/sanches/projects/COD-reactjs/src/pages/laboratorios/index.tsx"],"names":["CssBaseline","makeStyles","createStyles","useEffect","useState","useHistory","Navbartop","api","styled","AnimatePresence","motion","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Projects","state","setState","token","setToken","username","setUsername","laboraty_name","setLaborary_name","classes","nome","setNome","history","dados","config","headers","get","then","res","data","map","d","opacity","scale","rotate","transition","Grid","div","CardContainer"],"mappings":"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","sourcesContent":["import { CssBaseline } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Navbartop } from \"../../components/navbartop/navbartest\";\nimport { Barrinha } from \"../../components/sidebar\";\nimport api from \"../../services/api\";\nimport styled from \"@emotion/styled\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(24),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nfunction Projects() {\n  // MEU RETORNO DEVE SER UMA LISTA DE OBJETOS\n  const [state, setState] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [laboraty_name, setLaborary_name] = useState(\"\");\n\n  const classes = useStyles();\n  // O userState guarda váriaveis dinamicamente\n  const [nome, setNome] = useState(\"\");\n  // variavel auxiliar que funciona como histório de navegação\n  const history = useHistory();\n  // useEffect(() => {\n  //   api.get(\"/api/data\").then(\n  //     res => setState(res.data);\n  //   );\n  // });\n  const dados = {\n    token: \"269add21e1b01a62f8854b6e2a0e38\",\n    username: \"test10\",\n  };\n\n  useEffect(() => {\n    const config = {\n      headers: { token: dados.token, username: dados.username },\n    };\n\n    // PARA ENVIAR PRA BUSCAR INFORMAÇÇÕES DE UM PROJETO\n    // ESPECIFICO: `/laboratory/${config}`\n    api.get(\"/laboratory/\", config).then((res) => setState(res.data));\n  }, [dados.token, dados.username]);\n\n  // const CardContainer = styled(motion.div)`\n  //   display: grid;\n  //   place-content: center;\n  //   padding: 8px;\n  //   background-color: white;\n\n  //   height: 50px;\n  //   width: 200px;\n\n  //   border-radius: 8px;\n  // `;\n\n  return (\n    <>\n      <CssBaseline />\n      <Navbartop /> {/* <CssBaseline /> */}\n      {/* ISSO É PARA O CASO DE EU QUERER UM DADO QUE EU VÁ TRABALHAR COM ELE */}\n      {/* {state === \"\" ? (\n        \"\"\n      ) : ( */}\n      {/* ISSO É PARA O RETORNO DE UMA STRING APENAS */}\n      {/* <Grid> */}\n      <AnimatePresence>\n        {state.map((d) => (\n          <CardContainer\n            layout\n            // key={extractKey(d)}\n            // style={cardStyle?.(item, idx)}\n            // initial={{ opacity: 10 }}\n            animate={{\n              opacity: 3,\n              scale: [1.2, 1],\n              rotate: [1, 0, 0],\n              transition: [0, 1, 0],\n            }}\n          >\n            {d}\n          </CardContainer>\n        ))}\n      </AnimatePresence>\n      {/* </Grid> */}\n    </>\n  );\n}\n\nconst Grid = styled.div`\n  display: flex;\n`;\n\nconst CardContainer = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  background-color: green;\n  padding: 20px; /* this */\n  margin: 20px;\n`;\n\nexport default Projects;\n\n// // {state.map((d)\n//       {/* // style={{\n//       //   display: \"flex\",\n//       //   alignItems: \"center\",\n//       //   justifyContent: \"center\",\n//       // }}\n"]},"metadata":{},"sourceType":"module"}