{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1918648\\\\Documents\\\\GitHub\\\\COD-reactjs\\\\src\\\\pages\\\\pagina_de_teste\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n// import { Barrinha } from \"../../components/sidebar\";\nimport api from \"../../services/api\";\nimport styled from \"@emotion/styled\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport SidebarDashboard from \"../../components/sidebar\";\nimport barrinhaService from \"../../services/barrinhaState\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(24),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\nconst countriesData = [{\n  name: \"Germany\",\n  states: [\"Duesseldorf\", \"Leinfelden-Echterdingen\", \"Eschborn\"]\n}, {\n  name: \"India\",\n  states: [\"Delhi\", \"Kolkata\", \"Mumbai\", \"Bangalore\"]\n}, {\n  name: \"France\",\n  states: [\"Auvergne\", \"Bretagne\", \"Corse\", \"Centre\"]\n}];\n\nfunction Pagina_de_Teste() {\n  _s();\n\n  // MEU RETORNO DEVE SER UMA LISTA DE OBJETOS\n  // const [state, setState] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [laboraty_name, setLaborary_name] = useState(\"\");\n  const classes = useStyles(); // O userState guarda váriaveis dinamicamente\n\n  const [nome, setNome] = useState(\"\"); // variavel auxiliar que funciona como histório de navegação\n\n  const history = useHistory();\n  const [selectedId, setSelectedId] = useState(null);\n  const dados = {\n    token: \"269add21e1b01a62f8854b6e2a0e38\",\n    username: \"test10000\",\n    project: \"8bf8529d9c144b04b6a9d9fb87bcd7f7\"\n  };\n  const [collapsed, setCollapsed] = useState(true);\n  useEffect(() => {\n    const subscribe = barrinhaService.onBarrinha().subscribe(state => {\n      if (state) {\n        setCollapsed(false);\n      } else {\n        setCollapsed(true);\n      }\n    });\n  });\n  const [projetos, listProjeto] = useState([]);\n  useEffect(() => {\n    console.log(\"API PARA LISTAR OS PROJETOS\");\n    api.get(`/listarprojetos/`).then(projetos => listProjeto(projetos.data));\n  }, []);\n  const [{\n    country,\n    state\n  }, setData] = useState({\n    country: \"Germany\",\n    state: \"\"\n  });\n  const [virtualDesktops, listVirtualDesktops] = useState([]);\n\n  const handleLaboratoryChange = event => {\n    const selectedIndex = event.target.selectedIndex;\n    const lab_name = event.target[selectedIndex].getAttribute('value');\n    const lab_id = event.target[selectedIndex].getAttribute('id'); // console.log(\"API PARA LISTAR AS MAQUINAS VIRTUAIS DO PROJETO \" + lab_name + \" - \" + lab_id)\n\n    api.get(`/vdi/${lab_id}/${lab_name}`).then(virtualDesktops => listVirtualDesktops(virtualDesktops.data));\n  };\n\n  const onClickButtonVDI = event => {\n    console.log(\"Botão clicado!\");\n  };\n\n  window.addEventListener(\"beforeunload\", ev => {\n    ev.preventDefault();\n    return ev.returnValue = 'Are you sure you want to close?';\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: clsx(classes.root),\n          children: \"Laborat\\xF3rios dispon\\xEDveis!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            // value={}\n            onChange: handleLaboratoryChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Selecionar --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), projetos.map(proj => /*#__PURE__*/_jsxDEV(\"option\", {\n              id: proj['id'],\n              value: proj['nome'],\n              children: proj['nome']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: clsx(classes.root),\n            onClick: onClickButtonVDI,\n            children: \"Laborat\\xF3rios dispon\\xEDveis!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: virtualDesktops.map((d, idx) => /*#__PURE__*/_jsxDEV(Bloco // pra mostrar item por item preciso da key\n            , {\n              whileHover: {\n                backgroundColor: \"rgb(1, 87, 61)\"\n              },\n              initial: {\n                marginLeft: 200\n              },\n              animate: {\n                marginLeft: collapsed ? 64 : 168\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: d[\"url\"],\n                target: \"_blank\",\n                children: d[\"nome\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)\n            }, d[\"id\"], false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Pagina_de_Teste, \"1GlfJDRjYGSDbumRdq7Bw/Pg5KM=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Pagina_de_Teste;\nconst Container = styled.div`\n  display: flex;\n  justifycontent: center;\n  flex-direction: column;\n  align-items: center;\n`;\n_c2 = Container;\nconst Bloco = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justifycontent: center;\n  align-items: center;\n  background-color: #01573d;\n  padding: 20px; /* this */\n  margin: 20px;\n  transition: 1s background-color;\n  // flex-grow: 1;\n  width: 40%;\n  // height: 20%;\n  color: white;\n`;\n_c3 = Bloco;\nexport default Pagina_de_Teste;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Pagina_de_Teste\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Bloco\");","map":{"version":3,"sources":["C:/Users/1918648/Documents/GitHub/COD-reactjs/src/pages/pagina_de_teste/index.tsx"],"names":["Button","makeStyles","createStyles","useEffect","useState","useHistory","api","styled","AnimatePresence","motion","SidebarDashboard","barrinhaService","clsx","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","countriesData","name","states","Pagina_de_Teste","token","setToken","username","setUsername","laboraty_name","setLaborary_name","classes","nome","setNome","history","selectedId","setSelectedId","dados","project","collapsed","setCollapsed","subscribe","onBarrinha","state","projetos","listProjeto","console","log","get","then","data","country","setData","virtualDesktops","listVirtualDesktops","handleLaboratoryChange","event","selectedIndex","target","lab_name","getAttribute","lab_id","onClickButtonVDI","window","addEventListener","ev","preventDefault","returnValue","map","proj","d","idx","backgroundColor","marginLeft","Container","div","Bloco"],"mappings":"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","sourcesContent":["import { CssBaseline, ListItem, Button } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { FormEvent, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Navbartop } from \"../../components/navbartop/navbartest\";\r\n// import { Barrinha } from \"../../components/sidebar\";\r\nimport api from \"../../services/api\";\r\nimport styled from \"@emotion/styled\";\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\r\nimport SidebarDashboard from \"../../components/sidebar\";\r\nimport barrinhaService from \"../../services/barrinhaState\";\r\nimport clsx from \"clsx\";\r\nimport { stringify } from \"querystring\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(24),\r\n            textAlign: \"center\",\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    })\r\n);\r\n\r\nconst countriesData = [\r\n    {\r\n        name: \"Germany\",\r\n        states: [\"Duesseldorf\", \"Leinfelden-Echterdingen\", \"Eschborn\"]\r\n    },\r\n    {\r\n        name: \"India\",\r\n        states: [\"Delhi\", \"Kolkata\", \"Mumbai\", \"Bangalore\"]\r\n    },\r\n    {\r\n        name: \"France\",\r\n        states: [\"Auvergne\", \"Bretagne\", \"Corse\", \"Centre\"]\r\n    }\r\n];\r\n\r\n\r\nfunction Pagina_de_Teste() {\r\n    // MEU RETORNO DEVE SER UMA LISTA DE OBJETOS\r\n    // const [state, setState] = useState([]);\r\n    const [token, setToken] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [laboraty_name, setLaborary_name] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n    // O userState guarda váriaveis dinamicamente\r\n    const [nome, setNome] = useState(\"\");\r\n    // variavel auxiliar que funciona como histório de navegação\r\n    const history = useHistory();\r\n    const [selectedId, setSelectedId] = useState(null);\r\n\r\n    const dados = {\r\n        token: \"269add21e1b01a62f8854b6e2a0e38\",\r\n        username: \"test10000\",\r\n        project: \"8bf8529d9c144b04b6a9d9fb87bcd7f7\",\r\n\r\n    };\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const subscribe = barrinhaService.onBarrinha().subscribe((state) => {\r\n            if (state) {\r\n                setCollapsed(false);\r\n            } else {\r\n                setCollapsed(true);\r\n            }\r\n        });\r\n    });\r\n\r\n    const [projetos, listProjeto] = useState([]);\r\n    useEffect(() => {\r\n        console.log(\"API PARA LISTAR OS PROJETOS\")\r\n        api.get(`/listarprojetos/`).then((projetos) => listProjeto(projetos.data));\r\n    }, []);\r\n\r\n    const [{ country, state }, setData] = useState({\r\n        country: \"Germany\",\r\n        state: \"\"\r\n    });\r\n\r\n    const [virtualDesktops, listVirtualDesktops] = useState([]);\r\n\r\n    const handleLaboratoryChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const selectedIndex = event.target.selectedIndex;\r\n        const lab_name = event.target[selectedIndex].getAttribute('value')\r\n        const lab_id = event.target[selectedIndex].getAttribute('id')\r\n        // console.log(\"API PARA LISTAR AS MAQUINAS VIRTUAIS DO PROJETO \" + lab_name + \" - \" + lab_id)\r\n        api.get(`/vdi/${lab_id}/${lab_name}`).then((virtualDesktops) => listVirtualDesktops(virtualDesktops.data))\r\n    }\r\n\r\n    const onClickButtonVDI = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n        console.log(\"Botão clicado!\")\r\n            \r\n    }    \r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n        ev.preventDefault();\r\n        return ev.returnValue = 'Are you sure you want to close?';\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <SidebarDashboard />\r\n            <Container>\r\n                <div>\r\n                    <Button className={clsx(classes.root)}>Laboratórios disponíveis!</Button>\r\n                </div>\r\n                <div>\r\n                    <AnimatePresence>\r\n                        <select\r\n                            // value={}\r\n                            onChange={handleLaboratoryChange}\r\n                        >\r\n                            <option value=\"\">-- Selecionar --</option>\r\n                            {projetos.map((proj) => (\r\n                                <option id={(proj['id'])} value={(proj['nome'])}>\r\n                                    {proj['nome']}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </AnimatePresence>\r\n                    <AnimatePresence>\r\n                        <Button className={clsx(classes.root)} onClick={onClickButtonVDI}>Laboratórios disponíveis!</Button>\r\n                    </AnimatePresence>\r\n                    <AnimatePresence>\r\n                        <div>\r\n                            {virtualDesktops.map((d, idx) => (\r\n                                <Bloco\r\n                                    // pra mostrar item por item preciso da key\r\n                                    key={d[\"id\"]}\r\n                                    whileHover={{ backgroundColor: \"rgb(1, 87, 61)\" }}\r\n                                    initial={{ marginLeft: 200 }}\r\n                                    animate={{ marginLeft: collapsed ? 64 : 168 }}\r\n                                >\r\n                                    <a href={d[\"url\"]} target=\"_blank\">{d[\"nome\"]}</a>\r\n                                </Bloco>\r\n                            ))}\r\n                        </div>\r\n                    </AnimatePresence>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justifycontent: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Bloco = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justifycontent: center;\r\n  align-items: center;\r\n  background-color: #01573d;\r\n  padding: 20px; /* this */\r\n  margin: 20px;\r\n  transition: 1s background-color;\r\n  // flex-grow: 1;\r\n  width: 40%;\r\n  // height: 20%;\r\n  color: white;\r\n`;\r\n\r\nexport default Pagina_de_Teste;"]},"metadata":{},"sourceType":"module"}