{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/COD-reactjs/src/pages/create_laboratory/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport \"./style.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SidebarDashboard from \"../../components/sidebar\";\nimport barrinhaService from \"../../services/barrinhaState\";\nimport styled from \"@emotion/styled\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { SiGoogleclassroom } from \"react-icons/si\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseStyles = makeStyles(_c = theme => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n_c2 = UseStyles;\n\nfunction CadastroProject() {\n  _s();\n\n  // O userState guarda váriaveis dinamicamente\n  const [nomeLab, setnomeLab] = useState(\"\"); // variavel auxiliar que funciona como histório de navegação\n\n  const history = useHistory();\n  const classes = UseStyles();\n\n  const enviar = async e => {\n    e.preventDefault(); // pegar a hora atual\n\n    const time = new Date();\n    const data = {\n      nomeLab,\n      time\n    };\n    console.log(data); // POST QUANDO MINHA API ESTIVER ONLINE\n    // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n\n    const response = await api.post(\"/laboratory/\", data) // depois que rodar o post, roda o then\n    // CASO SUCESSO\n    .then(() => {\n      alert(\"Cadastrado com sucesso\"); // como eu nao sei se ele acessou a pagina home, estou forçando\n      // ele ir pra home\n\n      history.push(\"/\");\n    }) // CASO ERRO\n    .catch(() => {\n      alert(\"Serviço já existente\");\n    });\n  };\n\n  const [collapsed, setCollapsed] = useState(true);\n  useEffect(() => {\n    const subscribe = barrinhaService.onBarrinha().subscribe(state => {\n      if (state) {\n        setCollapsed(false);\n      } else {\n        setCollapsed(true);\n      }\n    });\n  });\n  return (\n    /*#__PURE__*/\n    // importante, sempre retornar um componente\n    // exemplo: ou uma div inteira, ou um h1\n    // tambem posso só abrir ou fechar uma tag <></>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SidebarDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container_animate, {\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: /*#__PURE__*/_jsxDEV(Bloco, {\n            initial: {\n              marginLeft: 200\n            },\n            animate: {\n              marginLeft: collapsed ? 64 : 168\n            },\n            children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.avatar,\n                children: /*#__PURE__*/_jsxDEV(SiGoogleclassroom, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h1\",\n                variant: \"h5\",\n                children: \"Sala de aula\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.form,\n              noValidate: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"nomeLab\",\n                label: \"NOme da sala de aula\",\n                name: \"email\",\n                autoComplete: \"nomeLab do Servi\\xE7o\",\n                autoFocus: true,\n                onChange: e => setnomeLab(e.target.value),\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.submit // onCLinc chama a função enviar criada la em cima\n              ,\n              onClick: enviar,\n              children: \"Criar sala\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(CadastroProject, \"CoEYMU8b7z70zeWYFg6wx9u2HAY=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = CadastroProject;\nconst Container_animate = styled.div`\n  display: flex;\n  justifycontent: center;\n  flex-direction: column;\n  align-items: center;\n`;\n_c4 = Container_animate;\nconst Bloco = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justifycontent: center;\n  align-items: center;\n  padding: 20px; /* this */\n  margin: 20px;\n  width: 40%;\n`;\n_c5 = Bloco;\nexport default CadastroProject;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"UseStyles$makeStyles\");\n$RefreshReg$(_c2, \"UseStyles\");\n$RefreshReg$(_c3, \"CadastroProject\");\n$RefreshReg$(_c4, \"Container_animate\");\n$RefreshReg$(_c5, \"Bloco\");","map":{"version":3,"sources":["/home/sanches/projects/COD-reactjs/src/pages/create_laboratory/index.tsx"],"names":["useState","useEffect","useHistory","api","Avatar","Button","CssBaseline","TextField","Typography","makeStyles","SidebarDashboard","barrinhaService","styled","AnimatePresence","motion","SiGoogleclassroom","UseStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","dark","form","width","submit","CadastroProject","nomeLab","setnomeLab","history","classes","enviar","e","preventDefault","time","Date","data","console","log","response","post","then","alert","push","catch","collapsed","setCollapsed","subscribe","onBarrinha","state","marginLeft","target","value","Container_animate","div","Bloco"],"mappings":"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","sourcesContent":["import { useState, FormEvent, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport \"./style.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Footer from \"../../components/footer/footer\";\nimport { Navbartop } from \"../../components/navbartop/navbartest\";\nimport SidebarDashboard from \"../../components/sidebar\";\nimport barrinhaService from \"../../services/barrinhaState\";\nimport styled from \"@emotion/styled\";\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\nimport { SiGoogleclassroom } from \"react-icons/si\";\n\nconst UseStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction CadastroProject() {\n  // O userState guarda váriaveis dinamicamente\n  const [nomeLab, setnomeLab] = useState(\"\");\n  // variavel auxiliar que funciona como histório de navegação\n  const history = useHistory();\n  const classes = UseStyles();\n  const enviar = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // pegar a hora atual\n    const time = new Date();\n    const data = {\n      nomeLab,\n      time,\n    };\n    console.log(data);\n\n    // POST QUANDO MINHA API ESTIVER ONLINE\n    // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n    const response = await api\n      .post(\"/laboratory/\", data)\n      // depois que rodar o post, roda o then\n      // CASO SUCESSO\n      .then(() => {\n        alert(\"Cadastrado com sucesso\");\n\n        // como eu nao sei se ele acessou a pagina home, estou forçando\n        // ele ir pra home\n        history.push(\"/\");\n      })\n      // CASO ERRO\n      .catch(() => {\n        alert(\"Serviço já existente\");\n      });\n  };\n\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    const subscribe = barrinhaService.onBarrinha().subscribe((state) => {\n      if (state) {\n        setCollapsed(false);\n      } else {\n        setCollapsed(true);\n      }\n    });\n  });\n\n  return (\n    // importante, sempre retornar um componente\n    // exemplo: ou uma div inteira, ou um h1\n    // tambem posso só abrir ou fechar uma tag <></>\n\n    <>\n      <SidebarDashboard />\n      <Container_animate>\n        <AnimatePresence>\n          <Bloco\n            initial={{ marginLeft: 200 }}\n            animate={{ marginLeft: collapsed ? 64 : 168 }}\n          >\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <SiGoogleclassroom />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sala de aula\n              </Typography>\n            </div>\n\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"nomeLab\"\n                label=\"NOme da sala de aula\"\n                name=\"email\"\n                autoComplete=\"nomeLab do Serviço\"\n                autoFocus\n                onChange={(e) => setnomeLab(e.target.value)}\n                type=\"text\"\n              />\n            </form>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              // onCLinc chama a função enviar criada la em cima\n              onClick={enviar}\n            >\n              Criar sala\n            </Button>\n          </Bloco>\n        </AnimatePresence>\n      </Container_animate>\n    </>\n  );\n}\n\nconst Container_animate = styled.div`\n  display: flex;\n  justifycontent: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Bloco = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justifycontent: center;\n  align-items: center;\n  padding: 20px; /* this */\n  margin: 20px;\n  width: 40%;\n`;\n\nexport default CadastroProject;\n"]},"metadata":{},"sourceType":"module"}