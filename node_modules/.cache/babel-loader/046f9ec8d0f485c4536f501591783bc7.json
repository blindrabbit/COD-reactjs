{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  label: \"Ubuntu 20.04\",\n  value: \"Ubuntu 20.04\"\n}, {\n  label: \"Windows 10\",\n  value: \"Windows 10\"\n}, {\n  label: \"Ubuntu Server\",\n  value: \"Ubuntu Server\"\n}];\nconst useStyles = makeStyles(theme => createStyles({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction Create_network() {\n  _s();\n\n  const [selectValue, setSelectValue] = useState({\n    image: \"\",\n    name: \"hai\"\n  });\n  const classes = useStyles(); //   const [state, setState] = useState<{\n  //     age: string | number;\n  //     name: string;\n  //   }>({\n  //     age: \"\",\n  //     name: \"hai\",\n  //   });\n\n  const handleChange = event => {\n    const name = event.target.name;\n    setSelectValue({ ...selectValue,\n      [name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Create_network, \"dR0oyiHR2Mw0RZQBZHdJEeLNDDs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Create_network;\nexport default Create_network;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create_network\");","map":{"version":3,"sources":["/home/sanches/projects/COD-reactjs/src/pages/create_network/index.tsx"],"names":["useState","createStyles","makeStyles","options","label","value","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Create_network","selectValue","setSelectValue","image","name","classes","handleChange","event","target"],"mappings":";;AACA,SAAsBA,QAAtB,QAAsC,OAAtC;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,CAAhB;AAeA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IAC3BN,YAAY,CAAC;AACXO,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GADF;AAKXC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADA;AALF,CAAD,CADc,CAA5B;;AAYA,SAASI,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAG3C;AACDiB,IAAAA,KAAK,EAAE,EADN;AAEDC,IAAAA,IAAI,EAAE;AAFL,GAH2C,CAA9C;AAQA,QAAMC,OAAO,GAAGb,SAAS,EAAzB,CATwB,CAUxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMc,YAAY,GAChBC,KADmB,IAEhB;AACH,UAAMH,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaJ,IAA1B;AACAF,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEb,OAACG,IAAD,GAAQG,KAAK,CAACC,MAAN,CAAajB;AAFR,KAAD,CAAd;AAID,GARD;;AAUA,sBACE,qCADF;AAqBD;;GAjDQS,c;UASSR,S;;;KATTQ,c;AAkDT,eAAeA,cAAf","sourcesContent":["import { FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport { ChangeEvent, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst options = [\n  {\n    label: \"Ubuntu 20.04\",\n    value: \"Ubuntu 20.04\",\n  },\n  {\n    label: \"Windows 10\",\n    value: \"Windows 10\",\n  },\n  {\n    label: \"Ubuntu Server\",\n    value: \"Ubuntu Server\",\n  },\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\nfunction Create_network() {\n  const [selectValue, setSelectValue] = useState<{\n    image: string | number;\n    name: string;\n  }>({\n    image: \"\",\n    name: \"hai\",\n  });\n\n  const classes = useStyles();\n  //   const [state, setState] = useState<{\n  //     age: string | number;\n  //     name: string;\n  //   }>({\n  //     age: \"\",\n  //     name: \"hai\",\n  //   });\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof selectValue;\n    setSelectValue({\n      ...selectValue,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <>\n      {/* <select onChange={(e) => setSelectValue(e.target.value)}>\n        {options.map((option) => (\n          <option value={option.value}>{option.label}</option>\n        ))}\n      </select>--\n      <div>{selectValue}</div> */}\n\n      {/* <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"age-native-simple\">Imagens</InputLabel>\n        <Select native onChange={handleChange}>\n          <option aria-label=\"None\" value=\"\" />\n          {options.map((option) => (\n            <option value={option.value}>{option.label}</option>\n          ))}\n        </Select>\n      </FormControl>\n      <div>{selectValue.name}</div> */}\n    </>\n  );\n}\nexport default Create_network;\n"]},"metadata":{},"sourceType":"module"}