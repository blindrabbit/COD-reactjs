{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/COD-reactjs/src/pages/create_laboratory/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport \"./style.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Footer from \"../../components/footer/footer\";\nimport SidebarDashboard from \"../../components/sidebar\";\nimport barrinhaService from \"../../services/barrinhaState\";\nimport styled from \"@emotion/styled\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseStyles = makeStyles(_c = theme => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n_c2 = UseStyles;\n\nfunction CadastroProject() {\n  _s();\n\n  // O userState guarda váriaveis dinamicamente\n  const [nomeLab, setnomeLab] = useState(\"\"); // variavel auxiliar que funciona como histório de navegação\n\n  const history = useHistory();\n  const classes = UseStyles();\n\n  const enviar = async e => {\n    e.preventDefault(); // pegar a hora atual\n\n    const time = new Date();\n    const data = {\n      nomeLab,\n      time\n    };\n    console.log(data); // POST QUANDO MINHA API ESTIVER ONLINE\n    // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n\n    const response = await api.post(\"/laboratory/\", data) // depois que rodar o post, roda o then\n    // CASO SUCESSO\n    .then(() => {\n      alert(\"Cadastrado com sucesso\"); // como eu nao sei se ele acessou a pagina home, estou forçando\n      // ele ir pra home\n\n      history.push(\"/\");\n    }) // CASO ERRO\n    .catch(() => {\n      alert(\"Serviço já existente\");\n    });\n  };\n\n  const [collapsed, setCollapsed] = useState(true);\n  useEffect(() => {\n    const subscribe = barrinhaService.onBarrinha().subscribe(state => {\n      if (state) {\n        setCollapsed(false);\n      } else {\n        setCollapsed(true);\n      }\n    });\n  });\n  return (\n    /*#__PURE__*/\n    // importante, sempre retornar um componente\n    // exemplo: ou uma div inteira, ou um h1\n    // tambem posso só abrir ou fechar uma tag <></>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SidebarDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(Fingerprint, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sala de aula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"nomeLab\",\n            label: \"nome do Servi\\xE7o\",\n            name: \"email\",\n            autoComplete: \"nomeLab do Servi\\xE7o\",\n            autoFocus: true,\n            onChange: e => setnomeLab(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit // onCLinc chama a função enviar criada la em cima\n          ,\n          onClick: enviar,\n          children: \"Autentica\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(CadastroProject, \"CoEYMU8b7z70zeWYFg6wx9u2HAY=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = CadastroProject;\nconst Container_animate = styled.div`\n  display: flex;\n  justifycontent: center;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Bloco = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justifycontent: center;\n  align-items: center;\n  background-color: #01573d;\n  padding: 20px; /* this */\n  margin: 20px;\n  transition: 1s background-color;\n  // flex-grow: 1;\n  width: 40%;\n  // height: 20%;\n`;\nexport default CadastroProject;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UseStyles$makeStyles\");\n$RefreshReg$(_c2, \"UseStyles\");\n$RefreshReg$(_c3, \"CadastroProject\");","map":{"version":3,"sources":["/home/sanches/projects/COD-reactjs/src/pages/create_laboratory/index.tsx"],"names":["useState","useEffect","useHistory","api","Avatar","Button","CssBaseline","TextField","Fingerprint","Typography","makeStyles","Container","Footer","SidebarDashboard","barrinhaService","styled","motion","UseStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","CadastroProject","nomeLab","setnomeLab","history","classes","enviar","e","preventDefault","time","Date","data","console","log","response","post","then","alert","push","catch","collapsed","setCollapsed","subscribe","onBarrinha","state","target","value","Container_animate","div","Bloco"],"mappings":"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","sourcesContent":["import { useState, FormEvent, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport \"./style.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Footer from \"../../components/footer/footer\";\nimport { Navbartop } from \"../../components/navbartop/navbartest\";\nimport SidebarDashboard from \"../../components/sidebar\";\nimport barrinhaService from \"../../services/barrinhaState\";\nimport styled from \"@emotion/styled\";\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\n\nconst UseStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction CadastroProject() {\n  // O userState guarda váriaveis dinamicamente\n  const [nomeLab, setnomeLab] = useState(\"\");\n  // variavel auxiliar que funciona como histório de navegação\n  const history = useHistory();\n  const classes = UseStyles();\n  const enviar = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // pegar a hora atual\n    const time = new Date();\n    const data = {\n      nomeLab,\n      time,\n    };\n    console.log(data);\n\n    // POST QUANDO MINHA API ESTIVER ONLINE\n    // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n    const response = await api\n      .post(\"/laboratory/\", data)\n      // depois que rodar o post, roda o then\n      // CASO SUCESSO\n      .then(() => {\n        alert(\"Cadastrado com sucesso\");\n\n        // como eu nao sei se ele acessou a pagina home, estou forçando\n        // ele ir pra home\n        history.push(\"/\");\n      })\n      // CASO ERRO\n      .catch(() => {\n        alert(\"Serviço já existente\");\n      });\n  };\n\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    const subscribe = barrinhaService.onBarrinha().subscribe((state) => {\n      if (state) {\n        setCollapsed(false);\n      } else {\n        setCollapsed(true);\n      }\n    });\n  });\n\n  return (\n    // importante, sempre retornar um componente\n    // exemplo: ou uma div inteira, ou um h1\n    // tambem posso só abrir ou fechar uma tag <></>\n\n    <>\n      <SidebarDashboard />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <Fingerprint />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sala de aula\n          </Typography>\n        </div>\n\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"nomeLab\"\n            label=\"nome do Serviço\"\n            name=\"email\"\n            autoComplete=\"nomeLab do Serviço\"\n            autoFocus\n            onChange={(e) => setnomeLab(e.target.value)}\n            type=\"text\"\n          />\n        </form>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          // onCLinc chama a função enviar criada la em cima\n          onClick={enviar}\n        >\n          Autenticação\n        </Button>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nconst Container_animate = styled.div`\n  display: flex;\n  justifycontent: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Bloco = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justifycontent: center;\n  align-items: center;\n  background-color: #01573d;\n  padding: 20px; /* this */\n  margin: 20px;\n  transition: 1s background-color;\n  // flex-grow: 1;\n  width: 40%;\n  // height: 20%;\n`;\n\nexport default CadastroProject;\n"]},"metadata":{},"sourceType":"module"}