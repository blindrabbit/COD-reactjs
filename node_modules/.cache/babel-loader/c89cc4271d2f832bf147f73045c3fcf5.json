{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/COD-reactjs/src/pages/laboratorios/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Barrinha } from \"../../components/sidebar\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(24),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Projects() {\n  _s();\n\n  const [state, setState] = useState([]);\n  const classes = useStyles(); // O userState guarda váriaveis dinamicamente\n\n  const [nome, setNome] = useState(\"\"); // variavel auxiliar que funciona como histório de navegação\n\n  const history = useHistory(); // useEffect(() => {\n  //   api.get(\"/api/data\").then(\n  //     res => setState(res.data);\n  //   );\n  // });\n\n  const projects = async e => {\n    e.preventDefault(); // pegar a hora atual\n    // const time = new Date();\n    // const data = {\n    //   nome,\n    //   time,\n    // };\n    // console.log(data);\n    // POST QUANDO MINHA API ESTIVER ONLINE\n    // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n\n    const response = await api.get(\"/projects/\") // depois que rodar o post, roda o then\n    // CASO SUCESSO\n    .then(() => {\n      alert(\"Cadastrado com sucesso\"); // como eu nao sei se ele acessou a pagina home, estou forçando\n      // ele ir pra home\n      // history.push(\"/\");\n    }) // CASO ERRO\n    .catch(() => {\n      alert(\"impossível localizar projetos\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Barrinha, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Projects, \"n6Ek7XsuEVnx5CtQv2xGMCk4wKw=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/sanches/projects/COD-reactjs/src/pages/laboratorios/index.tsx"],"names":["makeStyles","createStyles","useState","useHistory","Barrinha","api","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Projects","state","setState","classes","nome","setNome","history","projects","e","preventDefault","response","get","then","alert","catch"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AACA,SAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,IAC3BN,YAAY,CAAC;AACXO,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADK;AAIXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,EAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJI,CAAD,CADc,CAA5B;;AAaA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMmB,OAAO,GAAGf,SAAS,EAAzB,CAHkB,CAIlB;;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC,CALkB,CAMlB;;AACA,QAAMsB,OAAO,GAAGrB,UAAU,EAA1B,CAPkB,CAQlB;AACA;AACA;AACA;AACA;;AAEA,QAAMsB,QAAQ,GAAG,MAAOC,CAAP,IAAwB;AACvCA,IAAAA,CAAC,CAACC,cAAF,GADuC,CAGvC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,UAAMC,QAAQ,GAAG,MAAMvB,GAAG,CACvBwB,GADoB,CAChB,YADgB,EAErB;AACA;AAHqB,KAIpBC,IAJoB,CAIf,MAAM;AACVC,MAAAA,KAAK,CAAC,wBAAD,CAAL,CADU,CAGV;AACA;AACA;AACD,KAVoB,EAWrB;AAXqB,KAYpBC,KAZoB,CAYd,MAAM;AACXD,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,KAdoB,CAAvB;AAeD,GA5BD;;AA8BA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAMD;;GAlDQb,Q;UAGSZ,S,EAIAH,U;;;KAPTe,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Barrinha } from \"../../components/sidebar\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(24),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nfunction Projects() {\n  const [state, setState] = useState([]);\n\n  const classes = useStyles();\n  // O userState guarda váriaveis dinamicamente\n  const [nome, setNome] = useState(\"\");\n  // variavel auxiliar que funciona como histório de navegação\n  const history = useHistory();\n  // useEffect(() => {\n  //   api.get(\"/api/data\").then(\n  //     res => setState(res.data);\n  //   );\n  // });\n\n  const projects = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // pegar a hora atual\n    // const time = new Date();\n    // const data = {\n    //   nome,\n    //   time,\n    // };\n    // console.log(data);\n\n    // POST QUANDO MINHA API ESTIVER ONLINE\n    // SE TEM BARRINHA NO BACK TEM BNARRINHA NO FRONT\n    const response = await api\n      .get(\"/projects/\")\n      // depois que rodar o post, roda o then\n      // CASO SUCESSO\n      .then(() => {\n        alert(\"Cadastrado com sucesso\");\n\n        // como eu nao sei se ele acessou a pagina home, estou forçando\n        // ele ir pra home\n        // history.push(\"/\");\n      })\n      // CASO ERRO\n      .catch(() => {\n        alert(\"impossível localizar projetos\");\n      });\n  };\n\n  return (\n    <>\n      <Barrinha />\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}