{"ast":null,"code":"import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n\n  return mergeMap(identity, concurrent);\n}","map":{"version":3,"sources":["../../../../src/internal/operators/mergeAll.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,QAAT,QAAyB,kBAAzB;AA2DA,OAAM,SAAU,QAAV,CAAmD,UAAnD,EAAgF;AAA7B,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,QAAA;AAA6B;;AACpF,SAAO,QAAQ,CAAC,QAAD,EAAW,UAAX,CAAf;AACD","sourceRoot":"","sourcesContent":["import { mergeMap } from './mergeMap';\r\nimport { identity } from '../util/identity';\r\nexport function mergeAll(concurrent) {\r\n    if (concurrent === void 0) { concurrent = Infinity; }\r\n    return mergeMap(identity, concurrent);\r\n}\r\n//# sourceMappingURL=mergeAll.js.map"]},"metadata":{},"sourceType":"module"}