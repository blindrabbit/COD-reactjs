{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\nexport function bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler).apply(this, args).pipe(mapOneOrManyArgs(resultSelector));\n      };\n    }\n  }\n\n  if (scheduler) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return bindCallbackInternals(isNodeStyle, callbackFunc).apply(this, args).pipe(subscribeOn(scheduler), observeOn(scheduler));\n    };\n  }\n\n  return function () {\n    var _this = this;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var subject = new AsyncSubject();\n    var uninitialized = true;\n    return new Observable(function (subscriber) {\n      var subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        var isAsync_1 = false;\n        var isComplete_1 = false;\n        callbackFunc.apply(_this, __spreadArray(__spreadArray([], __read(args)), [function () {\n          var results = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            results[_i] = arguments[_i];\n          }\n\n          if (isNodeStyle) {\n            var err = results.shift();\n\n            if (err != null) {\n              subject.error(err);\n              return;\n            }\n          }\n\n          subject.next(1 < results.length ? results : results[0]);\n          isComplete_1 = true;\n\n          if (isAsync_1) {\n            subject.complete();\n          }\n        }]));\n\n        if (isComplete_1) {\n          subject.complete();\n        }\n\n        isAsync_1 = true;\n      }\n\n      return subs;\n    });\n  };\n}","map":{"version":3,"sources":["../../../../src/internal/observable/bindCallbackInternals.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { Observable } from '../Observable';\r\nimport { subscribeOn } from '../operators/subscribeOn';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\nimport { observeOn } from '../operators/observeOn';\r\nimport { AsyncSubject } from '../AsyncSubject';\r\nexport function bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {\r\n    if (resultSelector) {\r\n        if (isScheduler(resultSelector)) {\r\n            scheduler = resultSelector;\r\n        }\r\n        else {\r\n            return function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler)\r\n                    .apply(this, args)\r\n                    .pipe(mapOneOrManyArgs(resultSelector));\r\n            };\r\n        }\r\n    }\r\n    if (scheduler) {\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return bindCallbackInternals(isNodeStyle, callbackFunc)\r\n                .apply(this, args)\r\n                .pipe(subscribeOn(scheduler), observeOn(scheduler));\r\n        };\r\n    }\r\n    return function () {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var subject = new AsyncSubject();\r\n        var uninitialized = true;\r\n        return new Observable(function (subscriber) {\r\n            var subs = subject.subscribe(subscriber);\r\n            if (uninitialized) {\r\n                uninitialized = false;\r\n                var isAsync_1 = false;\r\n                var isComplete_1 = false;\r\n                callbackFunc.apply(_this, __spreadArray(__spreadArray([], __read(args)), [\r\n                    function () {\r\n                        var results = [];\r\n                        for (var _i = 0; _i < arguments.length; _i++) {\r\n                            results[_i] = arguments[_i];\r\n                        }\r\n                        if (isNodeStyle) {\r\n                            var err = results.shift();\r\n                            if (err != null) {\r\n                                subject.error(err);\r\n                                return;\r\n                            }\r\n                        }\r\n                        subject.next(1 < results.length ? results : results[0]);\r\n                        isComplete_1 = true;\r\n                        if (isAsync_1) {\r\n                            subject.complete();\r\n                        }\r\n                    },\r\n                ]));\r\n                if (isComplete_1) {\r\n                    subject.complete();\r\n                }\r\n                isAsync_1 = true;\r\n            }\r\n            return subs;\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=bindCallbackInternals.js.map"]},"metadata":{},"sourceType":"module"}