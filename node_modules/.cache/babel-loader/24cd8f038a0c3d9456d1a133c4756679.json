{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/Campus-ON-Demand/campus-on-demand/src/components/drawer/drawer.tsx\",\n    _s = $RefreshSig$();\n\nimport { IconButton } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nexport default function SideDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [\"All mail\", \"Trash\", \"Spam\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    edge: \"start\",\n    \"aria-label\": \"menu\",\n    onClick: toggleDrawer(\"right\", true),\n    children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n} //   const SideDrawer = () => {\n//       return(\n//         <></>\n//       );\n//   }\n//   const [state, setState] = useState({ right: false }); // Add this\n//   const toggleDrawer =\n//     (anchor: Anchor, open: boolean) => (event: React.KeyboardEvent) => {\n//       if (\n//         event.type === \"keydown\" &&\n//         (event.key === \"Tab\" || event.key === \"Shift\")\n//       ) {\n//         return;\n//       }\n//       setState({ [anchor]: open });\n//     };\n//   o debaixo tava tentando fazer sozinho e errei!!!\n//   const [state, setState] = useState({ right: false });\n//   const handleMouseEvent =\n//     (anchor: Anchor, open: boolean) =>\n//     (event: React.MouseEvent<HTMLButtonElement>) => {\n//       if (open == true) {\n//         setState({ [anchor]: open });\n//         return;\n//       } else {\n//         setState({ [anchor]: open });\n//         return;\n//       }\n//     };\n//   return (\n//     // <Fragment>\n//     <IconButton\n//       edge=\"start\"\n//       aria-label=\"menu\"\n//       onClick={handleMouseEvent(\"right\", true)}\n//       //   {toggleDrawer(\"right\", true)}\n//     >\n//       <Menu />\n//     </IconButton>\n//     // </Fragment>\n//   );\n\n_s(SideDrawer, \"uTy8EQlIcsRdyD0oX481Py/w3j4=\", false, function () {\n  return [useStyles];\n});\n\n_c = SideDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideDrawer\");","map":{"version":3,"sources":["/home/sanches/projects/Campus-ON-Demand/campus-on-demand/src/components/drawer/drawer.tsx"],"names":["IconButton","Menu","React","makeStyles","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","useStyles","list","width","fullList","SideDrawer","classes","state","setState","useState","right","toggleDrawer","anchor","open","event","type","key","map","text","index"],"mappings":"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","sourcesContent":["import { IconButton } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport React, { Fragment } from \"react\";\nimport { useState } from \"react\";\n// import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function SideDrawer() {\n  const classes = useStyles();\n  type Anchor = \"right\";\n  const [state, setState] = React.useState({\n    right: false,\n  });\n\n  const toggleDrawer =\n    (anchor: Anchor, open: boolean) =>\n    (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n\n      setState({ ...state, [anchor]: open });\n    };\n\n  const list = (anchor: Anchor) => (\n    <div\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <IconButton\n      edge=\"start\"\n      aria-label=\"menu\"\n      onClick={toggleDrawer(\"right\", true)}\n    >\n      <Menu />\n    </IconButton>\n  );\n}\n//   const SideDrawer = () => {\n//       return(\n//         <></>\n//       );\n//   }\n//   const [state, setState] = useState({ right: false }); // Add this\n//   const toggleDrawer =\n//     (anchor: Anchor, open: boolean) => (event: React.KeyboardEvent) => {\n//       if (\n//         event.type === \"keydown\" &&\n//         (event.key === \"Tab\" || event.key === \"Shift\")\n//       ) {\n//         return;\n//       }\n//       setState({ [anchor]: open });\n//     };\n//   o debaixo tava tentando fazer sozinho e errei!!!\n//   const [state, setState] = useState({ right: false });\n//   const handleMouseEvent =\n//     (anchor: Anchor, open: boolean) =>\n//     (event: React.MouseEvent<HTMLButtonElement>) => {\n//       if (open == true) {\n//         setState({ [anchor]: open });\n//         return;\n//       } else {\n//         setState({ [anchor]: open });\n//         return;\n//       }\n//     };\n//   return (\n//     // <Fragment>\n//     <IconButton\n//       edge=\"start\"\n//       aria-label=\"menu\"\n//       onClick={handleMouseEvent(\"right\", true)}\n//       //   {toggleDrawer(\"right\", true)}\n//     >\n//       <Menu />\n//     </IconButton>\n//     // </Fragment>\n//   );\n"]},"metadata":{},"sourceType":"module"}