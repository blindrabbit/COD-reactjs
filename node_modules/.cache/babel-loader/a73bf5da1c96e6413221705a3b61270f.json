{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/Campus-ON-Demand/campus-on-demand/src/pages/cadastroUser/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/header/header\";\nimport api from \"../../services/api\";\nimport \"./style.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport clsx from \"clsx\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\"; // PAGINA DE AUTTENTICAÇÃO DO SERVIÇO\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\"; // Componente sempre com letra maiúscula--\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseStyles = makeStyles(_c = theme => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3) // margin: theme.spacing(1),\n\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: \"25ch\"\n  }\n}));\n_c2 = UseStyles;\n\nfunction CadastroUser() {\n  _s();\n\n  // O userState guarda váriaveis dinamicamente\n  // const [username, setUsername] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // variavel auxiliar que funciona como histório de navegação\n  const history = useHistory();\n  const classes = UseStyles();\n  const time = new Date();\n  const [values, setValues] = React.useState({\n    username: \"\",\n    password: \"\",\n    name: \"\",\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const enviar = async e => {\n    e.preventDefault(); // pegar a hora atual\n    // const time = new Date();\n    // const data = {\n    //   name,\n    //   username,\n    //   password,\n    //   time,\n    // };\n    // console.log(data);\n    // POST QUANDO MINHA API ESTIVER ONLINE\n    // ROTA PARA CRIAÇÃO DE USUÁRIO\n\n    api.post(\"/rota da minha api\", values) // depois que rodar o post, roda o then\n    // CASO SUCESSO\n    .then(() => {\n      alert(\"Cadastrado com sucesso\"); // como eu nao sei se ele acessou a pagina home, estou forçando\n      // ele ir pra home\n\n      history.push(\"/\");\n    }) // CASO ERRO\n    .catch(() => {\n      alert(\"erro na criação\");\n    });\n    console.log(values);\n  };\n\n  return (\n    /*#__PURE__*/\n    // importante, sempre retornar um componente\n    // exemplo: ou uma div inteira, ou um h1\n    // tambem posso só abrir ou fechar uma tag <></>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.textField),\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-name\",\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-name\",\n          fullWidth: true,\n          type: \"text\",\n          value: values.name,\n          autoFocus: true,\n          onChange: handleChange(\"name\"),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this) // labelWidth={0}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        className: classes.form,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-password\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-username\",\n          type: \"text\",\n          fullWidth: true,\n          autoFocus: true,\n          onChange: handleChange(\"username\"),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this) // labelWidth={75}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.form,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-password\",\n          type: values.showPassword ? \"text\" : \"password\",\n          value: values.password,\n          autoFocus: true,\n          onChange: handleChange(\"password\"),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              edge: \"end\",\n              children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this) // labelWidth={75}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit // onCLinc chama a função enviar criada la em cima\n        ,\n        onClick: enviar,\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(CadastroUser, \"jGxRmlJF9z0410/0ByUTl2d275g=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = CadastroUser;\nexport default CadastroUser;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UseStyles$makeStyles\");\n$RefreshReg$(_c2, \"UseStyles\");\n$RefreshReg$(_c3, \"CadastroUser\");","map":{"version":3,"sources":["/home/sanches/projects/Campus-ON-Demand/campus-on-demand/src/pages/cadastroUser/index.tsx"],"names":["React","useHistory","Header","api","Button","makeStyles","FormControl","InputLabel","clsx","InputAdornment","Visibility","VisibilityOff","IconButton","OutlinedInput","AccountCircle","UseStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","root","flexWrap","withoutLabel","textField","CadastroUser","history","classes","time","Date","values","setValues","useState","username","password","name","showPassword","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","enviar","e","post","then","alert","push","catch","console","log"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/header/header\";\nimport api from \"../../services/api\";\nimport \"./style.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport Person from \"@material-ui/icons/Person\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Footer from \"../../components/footer/footer\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport clsx from \"clsx\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\n// PAGINA DE AUTTENTICAÇÃO DO SERVIÇO\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n// Componente sempre com letra maiúscula--\nconst UseStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n    // margin: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: \"25ch\",\n  },\n}));\n\ninterface State {\n  username: string;\n  password: string;\n  name: string;\n  showPassword: boolean;\n}\n\nfunction CadastroUser() {\n  // O userState guarda váriaveis dinamicamente\n  // const [username, setUsername] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n\n  // variavel auxiliar que funciona como histório de navegação\n  const history = useHistory();\n  const classes = UseStyles();\n  const time = new Date();\n\n  const [values, setValues] = React.useState<State>({\n    username: \"\",\n    password: \"\",\n    name: \"\",\n    showPassword: false,\n  });\n\n  const handleChange =\n    (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues({ ...values, [prop]: event.target.value });\n    };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n\n  const enviar = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // pegar a hora atual\n    // const time = new Date();\n    // const data = {\n    //   name,\n    //   username,\n    //   password,\n    //   time,\n    // };\n    // console.log(data);\n\n    // POST QUANDO MINHA API ESTIVER ONLINE\n    // ROTA PARA CRIAÇÃO DE USUÁRIO\n    api\n      .post(\"/rota da minha api\", values)\n      // depois que rodar o post, roda o then\n      // CASO SUCESSO\n      .then(() => {\n        alert(\"Cadastrado com sucesso\");\n\n        // como eu nao sei se ele acessou a pagina home, estou forçando\n        // ele ir pra home\n        history.push(\"/\");\n      })\n      // CASO ERRO\n      .catch(() => {\n        alert(\"erro na criação\");\n      });\n    console.log(values);\n  };\n  return (\n    // importante, sempre retornar um componente\n    // exemplo: ou uma div inteira, ou um h1\n    // tambem posso só abrir ou fechar uma tag <></>\n\n    <>\n      <Header />\n      {/* <Container maxWidth=\"xs\"> */}\n      {/* <CssBaseline /> */}\n      {/* <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <Person />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Cadastro de Usuário\n          </Typography>\n        </div> */}\n\n      <FormControl\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n      >\n        <InputLabel htmlFor=\"outlined-adornment-name\">Nome</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-name\"\n          fullWidth={true}\n          type=\"text\"\n          value={values.name}\n          autoFocus\n          onChange={handleChange(\"name\")}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              {/* <IconButton aria-label=\"toggle password visibility\" edge=\"end\">\n                  {\" \"} */}\n\n              <AccountCircle />\n            </InputAdornment>\n          }\n          // labelWidth={0}\n        />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.form} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-password\">Username</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-username\"\n          type=\"text\"\n          fullWidth={true}\n          autoFocus\n          onChange={handleChange(\"username\")}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              {/* <IconButton aria-label=\"toggle password visibility\" edge=\"end\">\n                  {\" \"} */}\n              <AccountCircle />\n            </InputAdornment>\n          }\n          // labelWidth={75}\n        />\n      </FormControl>\n\n      <FormControl className={classes.form} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={values.showPassword ? \"text\" : \"password\"}\n          value={values.password}\n          autoFocus\n          onChange={handleChange(\"password\")}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          // labelWidth={75}\n        />\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        // onCLinc chama a função enviar criada la em cima\n        onClick={enviar}\n      >\n        Cadastrar\n      </Button>\n      {/* </Container> */}\n    </>\n  );\n}\n\nexport default CadastroUser;\n"]},"metadata":{},"sourceType":"module"}