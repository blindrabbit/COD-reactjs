{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/Campus-ON-Demand/campus-on-demand/src/components/drawer/drawer.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Menu } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport FreeBreakfast from \"@material-ui/icons/FreeBreakfast\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `black`\n  }\n});\nconst navLinks = [{\n  title: \"Sobre\",\n  path: \"/#\"\n}, {\n  title: \"ServiÃ§os\",\n  path: \"/#\"\n}, {\n  title: \"Equipe\",\n  path: \"/#\"\n}, {\n  title: \"Contato\",\n  path: \"/#\"\n}, {\n  title: \"login\",\n  path: \"/#\"\n}];\n\nfunction ListItemLink(props) {\n  _s();\n\n  const {\n    icon,\n    primary,\n    to\n  } = props;\n  const renderLink = React.useMemo(() => /*#__PURE__*/React.forwardRef((itemProps, ref) => /*#__PURE__*/_jsxDEV(RouterLink, {\n    to: to,\n    ref: ref,\n    ...itemProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this)), [to]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      component: renderLink,\n      children: [icon ? /*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListItemLink, \"OqW63DLuUDBJ2rihgC9//I/bWiM=\");\n\n_c = ListItemLink;\nexport default function SideDrawer() {\n  _s2();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    className: classes.list,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemLink, {\n        to: \"/#\",\n        primary: \"Login\",\n        icon: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemLink, {\n        to: \"/#\",\n        primary: \"Sobre\",\n        icon: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemLink, {\n        to: \"/#\",\n        primary: \"Servi\\xE7os\",\n        icon: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemLink, {\n        to: \"/#\",\n        primary: \"Equipe\",\n        icon: /*#__PURE__*/_jsxDEV(FreeBreakfast, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"right\"].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(anchor, true),\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          fontSize: \"large\",\n          style: {\n            color: `white`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        onOpen: toggleDrawer(anchor, true),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n} //   const SideDrawer = () => {\n//       return(\n//         <></>\n//       );\n//   }\n//   const [state, setState] = useState({ right: false }); // Add this\n//   const toggleDrawer =\n//     (anchor: Anchor, open: boolean) => (event: React.KeyboardEvent) => {\n//       if (\n//         event.type === \"keydown\" &&\n//         (event.key === \"Tab\" || event.key === \"Shift\")\n//       ) {\n//         return;\n//       }\n//       setState({ [anchor]: open });\n//     };\n//   o debaixo tava tentando fazer sozinho e errei!!!\n//   const [state, setState] = useState({ right: false });\n//   const handleMouseEvent =\n//     (anchor: Anchor, open: boolean) =>\n//     (event: React.MouseEvent<HTMLButtonElement>) => {\n//       if (open == true) {\n//         setState({ [anchor]: open });\n//         return;\n//       } else {\n//         setState({ [anchor]: open });\n//         return;\n//       }\n//     };\n//   return (\n//     // <Fragment>\n//     <IconButton\n//       edge=\"start\"\n//       aria-label=\"menu\"\n//       onClick={handleMouseEvent(\"right\", true)}\n//       //   {toggleDrawer(\"right\", true)}\n//     >\n//       <Menu />\n//     </IconButton>\n//     // </Fragment>\n//   );\n\n_s2(SideDrawer, \"uTy8EQlIcsRdyD0oX481Py/w3j4=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SideDrawer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItemLink\");\n$RefreshReg$(_c2, \"SideDrawer\");","map":{"version":3,"sources":["/home/sanches/projects/Campus-ON-Demand/campus-on-demand/src/components/drawer/drawer.tsx"],"names":["Menu","React","makeStyles","SwipeableDrawer","Button","List","ListItem","ListItemIcon","ListItemText","InboxIcon","FreeBreakfast","AccountCircleIcon","Link","RouterLink","useStyles","list","width","fullList","linkText","textDecoration","textTransform","color","navLinks","title","path","ListItemLink","props","icon","primary","to","renderLink","useMemo","forwardRef","itemProps","ref","SideDrawer","classes","state","setState","useState","right","toggleDrawer","anchor","open","event","type","key","map"],"mappings":"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","sourcesContent":["import { IconButton } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport React, { Fragment } from \"react\";\nimport { useState } from \"react\";\n// import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport FreeBreakfast from \"@material-ui/icons/FreeBreakfast\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Route, MemoryRouter } from \"react-router\";\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from \"react-router-dom\";\nimport { Omit } from \"@material-ui/types\";\n\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport {\n  FiHome,\n  FiCoffee,\n  FiCodesandbox,\n  FiActivity,\n  FiSmartphone,\n  FiUserCheck,\n} from \"react-icons/fi\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `black`,\n  },\n});\n\nconst navLinks = [\n  { title: \"Sobre\", path: \"/#\" },\n  { title: \"ServiÃ§os\", path: \"/#\" },\n  { title: \"Equipe\", path: \"/#\" },\n  { title: \"Contato\", path: \"/#\" },\n  { title: \"login\", path: \"/#\" },\n];\n\ninterface ListItemLinkProps {\n  icon?: React.ReactElement;\n  primary: string;\n  to: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<any, Omit<RouterLinkProps, \"to\">>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nexport default function SideDrawer() {\n  const classes = useStyles();\n  type Anchor = \"right\";\n  const [state, setState] = React.useState({\n    right: false,\n  });\n\n  const toggleDrawer =\n    (anchor: Anchor, open: boolean) =>\n    (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n\n      setState({ ...state, [anchor]: open });\n    };\n\n  const list = (anchor: Anchor) => (\n    <div\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n      className={classes.list}\n    >\n      {/* <List>\n        {[\"Sobre\", \"ServiÃ§os\", \"Equipe\", \"Contatos\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List> */}\n      {/* <Divider /> */}\n      <List>\n        {/* <Button variant=\"contained\">LOGIN</Button>\n        {navLinks.map(({ title, path }) => (\n          <a href={path} key={title} className={classes.linkText}>\n            <ListItem button>\n              <ListItemText primary={title} />\n            </ListItem>\n          </a>\n        ))} */}\n        <ListItemLink to=\"/#\" primary=\"Login\" icon={<AccountCircleIcon />} />\n        <ListItemLink to=\"/#\" primary=\"Sobre\" icon={<InboxIcon />} />\n        <ListItemLink to=\"/#\" primary=\"ServiÃ§os\" icon={<InboxIcon />} />\n        <ListItemLink to=\"/#\" primary=\"Equipe\" icon={<FreeBreakfast />} />\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      {([\"right\"] as Anchor[]).map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>\n            <Menu fontSize=\"large\" style={{ color: `white` }} />\n          </Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n//   const SideDrawer = () => {\n//       return(\n//         <></>\n//       );\n//   }\n//   const [state, setState] = useState({ right: false }); // Add this\n//   const toggleDrawer =\n//     (anchor: Anchor, open: boolean) => (event: React.KeyboardEvent) => {\n//       if (\n//         event.type === \"keydown\" &&\n//         (event.key === \"Tab\" || event.key === \"Shift\")\n//       ) {\n//         return;\n//       }\n//       setState({ [anchor]: open });\n//     };\n//   o debaixo tava tentando fazer sozinho e errei!!!\n//   const [state, setState] = useState({ right: false });\n//   const handleMouseEvent =\n//     (anchor: Anchor, open: boolean) =>\n//     (event: React.MouseEvent<HTMLButtonElement>) => {\n//       if (open == true) {\n//         setState({ [anchor]: open });\n//         return;\n//       } else {\n//         setState({ [anchor]: open });\n//         return;\n//       }\n//     };\n//   return (\n//     // <Fragment>\n//     <IconButton\n//       edge=\"start\"\n//       aria-label=\"menu\"\n//       onClick={handleMouseEvent(\"right\", true)}\n//       //   {toggleDrawer(\"right\", true)}\n//     >\n//       <Menu />\n//     </IconButton>\n//     // </Fragment>\n//   );\n"]},"metadata":{},"sourceType":"module"}