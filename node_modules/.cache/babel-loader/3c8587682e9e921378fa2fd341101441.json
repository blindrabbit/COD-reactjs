{"ast":null,"code":"var _jsxFileName = \"/home/sanches/projects/COD-reactjs/src/components/teste/teste.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { Navigation } from \"@material-ui/icons\";\nimport { MenuToggle } from \"../menuToggle/MenuToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: \"spring\",\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: \"circle(30px at 40px 40px)\",\n    transition: {\n      delay: 0.5,\n      type: \"spring\",\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\nexport const Example = () => {\n  _s();\n\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null); //   const { height } = useDimensions(containerRef);\n\n  return /*#__PURE__*/_jsxDEV(motion.nav, {\n    initial: false,\n    animate: isOpen ? \"open\" : \"closed\" //   custom={height}\n    ,\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"background\",\n      variants: sidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuToggle, {\n      toggle: () => toggleOpen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Example, \"r5S2Bouuh6qpJdwOiSo6EO/mkTc=\", false, function () {\n  return [useCycle];\n});\n\n_c = Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["/home/sanches/projects/COD-reactjs/src/components/teste/teste.tsx"],"names":["React","useRef","motion","useCycle","Navigation","MenuToggle","sidebar","open","height","clipPath","transition","type","stiffness","restDelta","closed","delay","damping","Example","isOpen","toggleOpen","containerRef"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,CAACC,MAAM,GAAG,IAAV,MAAoB;AACxBC,IAAAA,QAAQ,EAAG,UAASD,MAAM,GAAG,CAAT,GAAa,GAAI,kBADb;AAExBE,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,SAAS,EAAE,EAFD;AAGVC,MAAAA,SAAS,EAAE;AAHD;AAFY,GAApB,CADQ;AASdC,EAAAA,MAAM,EAAE;AACNL,IAAAA,QAAQ,EAAE,2BADJ;AAENC,IAAAA,UAAU,EAAE;AACVK,MAAAA,KAAK,EAAE,GADG;AAEVJ,MAAAA,IAAI,EAAE,QAFI;AAGVC,MAAAA,SAAS,EAAE,GAHD;AAIVI,MAAAA,OAAO,EAAE;AAJC;AAFN;AATM,CAAhB;AAoBA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBhB,QAAQ,CAAC,KAAD,EAAQ,IAAR,CAArC;AACA,QAAMiB,YAAY,GAAGnB,MAAM,CAAC,IAAD,CAA3B,CAF2B,CAG3B;;AAEA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,OAAO,EAAEiB,MAAM,GAAG,MAAH,GAAY,QAF7B,CAGE;AAHF;AAIE,IAAA,GAAG,EAAEE,YAJP;AAAA,4BAME,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAmC,MAAA,QAAQ,EAAEd;AAA7C;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,MAAMa,UAAU;AAApC;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBM;;GAAMF,O;UACkBd,Q;;;KADlBc,O","sourcesContent":["import * as React from \"react\";\nimport { useRef } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { Navigation } from \"@material-ui/icons\";\nimport { MenuToggle } from \"../menuToggle/MenuToggle\";\n\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: \"spring\",\n      stiffness: 20,\n      restDelta: 2,\n    },\n  }),\n  closed: {\n    clipPath: \"circle(30px at 40px 40px)\",\n    transition: {\n      delay: 0.5,\n      type: \"spring\",\n      stiffness: 400,\n      damping: 40,\n    },\n  },\n};\n\nexport const Example = () => {\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null);\n  //   const { height } = useDimensions(containerRef);\n\n  return (\n    <motion.nav\n      initial={false}\n      animate={isOpen ? \"open\" : \"closed\"}\n      //   custom={height}\n      ref={containerRef}\n    >\n      <motion.div className=\"background\" variants={sidebar} />\n      <Navigation />\n      <MenuToggle toggle={() => toggleOpen()} />\n    </motion.nav>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}